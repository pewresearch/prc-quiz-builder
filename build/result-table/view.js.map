{"version":3,"file":"result-table/view.js","mappings":"2CACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICIlF,MAAM,GAJGI,EAI8B,CAAE,WAAgB,IAAOC,EAAwE,WAAG,MAAW,IAAOA,EAAmE,OAH3NC,EAAI,CAAC,EAAGhB,EAAoBiB,EAAED,EAAGF,GAAWE,ICI3C,MAAEE,IAAUC,EAAAA,EAAAA,OAAM,sBAAuB,CAC9CD,MAAO,CACN,oBAAIE,GACH,IAAKF,EAAMG,eACV,MAAO,GAER,MAAMC,GAAUC,EAAAA,EAAAA,eACV,OAAEC,EAAM,UAAEC,GAAcH,GACxB,MAAEI,EAAK,eAAEC,GAAmBF,EAC5BG,EAAWV,EAAM,QAAQM,MACzB,UAAEK,GAAcD,EAKtB,OAFuBvB,OAAOyB,OAAOD,GAEfE,KAAKC,IAC1B,MAAM,KAAEC,EAAI,KAAEC,EAAI,QAAEC,GAAYH,EAG1BI,EAAeC,MAAMC,QAAQH,GAChCA,EACA9B,OAAOyB,OAAOK,GAGXI,EAAiBH,EAAaI,QAClCC,GAAWA,EAAOC,UAIdC,EAAsBP,EAAaI,QAAQC,GAChDd,EAAeiB,SAASH,EAAOR,QAyDhC,MAAO,CACNA,OACAS,QAvBiBG,MACjB,GAA8B,IAA1BN,EAAeO,OAClB,OAAO,EAIR,MAAMC,EAAeR,EACnBR,KAAKU,GAAWA,EAAOR,OACvBe,OACIC,EAAgBN,EACpBZ,KAAKU,GAAWA,EAAOR,OACvBe,OAEF,OACCD,EAAaD,SAAWG,EAAcH,QACtCC,EAAaG,OACZ,CAACjB,EAAMkB,IAAUlB,IAASgB,EAAcE,IACxC,EAMON,GACTb,SAAUE,EACVkB,eAxCmC,IAA/BT,EAAoBG,OAChB,qBAGDH,EACLZ,KAAKU,GAAWA,EAAOY,cAAgBZ,EAAOP,OAC9CoB,KAAK,MAmCPC,cApD8B,IAA1BhB,EAAeO,OACX,oBAGDP,EACLR,KAAKU,GAAWA,EAAOY,cAAgBZ,EAAOP,OAC9CoB,KAAK,MA+CP,GAEH,KDpGM,IAACxC,EACJE","sources":["webpack://@prc/quiz-builder/webpack/bootstrap","webpack://@prc/quiz-builder/webpack/runtime/define property getters","webpack://@prc/quiz-builder/webpack/runtime/hasOwnProperty shorthand","webpack://@prc/quiz-builder/external module \"@wordpress/interactivity\"","webpack://@prc/quiz-builder/./src/result-table/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store) });","/**\n * WordPress Dependencies\n */\nimport { store, getContext, getElement } from '@wordpress/interactivity';\n\nconst { state } = store('prc-quiz/controller', {\n\tstate: {\n\t\tget resultsTableRows() {\n\t\t\tif (!state.displayResults) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst context = getContext();\n\t\t\tconst { quizId, userScore } = context;\n\t\t\tconst { score, userSubmission } = userScore;\n\t\t\tconst quizData = state[`quiz_${quizId}`];\n\t\t\tconst { questions } = quizData;\n\n\t\t\t// Convert questions object to array since questions appears to be an object with UUIDs as keys\n\t\t\tconst questionsArray = Object.values(questions);\n\n\t\t\treturn questionsArray.map((question) => {\n\t\t\t\tconst { uuid, text, answers } = question;\n\n\t\t\t\t// Convert answers object to array if it's also an object\n\t\t\t\tconst answersArray = Array.isArray(answers)\n\t\t\t\t\t? answers\n\t\t\t\t\t: Object.values(answers);\n\n\t\t\t\t// Get all correct answers instead of just the first one\n\t\t\t\tconst correctAnswers = answersArray.filter(\n\t\t\t\t\t(answer) => answer.correct\n\t\t\t\t);\n\n\t\t\t\t// Get all user selected answers (multiple selections possible)\n\t\t\t\tconst userSelectedAnswers = answersArray.filter((answer) =>\n\t\t\t\t\tuserSubmission.includes(answer.uuid)\n\t\t\t\t);\n\n\t\t\t\t// console.log('userSelectedAnswers = ', userSelectedAnswers);\n\t\t\t\t// console.log('correctAnswers = ', correctAnswers);\n\t\t\t\t// console.log('question = ', question);\n\t\t\t\t// console.log('answersArray = ', answersArray);\n\n\t\t\t\t// Format multiple correct answers for display\n\t\t\t\tconst formatCorrectAnswers = () => {\n\t\t\t\t\tif (correctAnswers.length === 0) {\n\t\t\t\t\t\treturn 'No correct answer';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn correctAnswers\n\t\t\t\t\t\t.map((answer) => answer.resultsLabel || answer.text)\n\t\t\t\t\t\t.join(', ');\n\t\t\t\t};\n\n\t\t\t\t// Format multiple selected answers for display\n\t\t\t\tconst formatSelectedAnswers = () => {\n\t\t\t\t\tif (userSelectedAnswers.length === 0) {\n\t\t\t\t\t\treturn 'No answer selected';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn userSelectedAnswers\n\t\t\t\t\t\t.map((answer) => answer.resultsLabel || answer.text)\n\t\t\t\t\t\t.join(', ');\n\t\t\t\t};\n\n\t\t\t\t// Determine if the user got the question correct\n\t\t\t\t// This could be implemented in different ways depending on requirements:\n\t\t\t\t// 1. All correct answers must be selected (and no incorrect ones)\n\t\t\t\t// 2. At least one correct answer must be selected\n\t\t\t\t// 3. More correct than incorrect answers selected\n\t\t\t\t// For now, using approach #1: exact match of correct answers\n\t\t\t\tconst isCorrect = () => {\n\t\t\t\t\tif (correctAnswers.length === 0) {\n\t\t\t\t\t\treturn false; // No correct answers defined\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if user selected exactly the correct answers\n\t\t\t\t\tconst correctUuids = correctAnswers\n\t\t\t\t\t\t.map((answer) => answer.uuid)\n\t\t\t\t\t\t.sort();\n\t\t\t\t\tconst selectedUuids = userSelectedAnswers\n\t\t\t\t\t\t.map((answer) => answer.uuid)\n\t\t\t\t\t\t.sort();\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tcorrectUuids.length === selectedUuids.length &&\n\t\t\t\t\t\tcorrectUuids.every(\n\t\t\t\t\t\t\t(uuid, index) => uuid === selectedUuids[index]\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\treturn {\n\t\t\t\t\tuuid,\n\t\t\t\t\tcorrect: isCorrect(),\n\t\t\t\t\tquestion: text,\n\t\t\t\t\tselectedAnswer: formatSelectedAnswers(),\n\t\t\t\t\tcorrectAnswer: formatCorrectAnswers(),\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t},\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","d","state","store","resultsTableRows","displayResults","context","getContext","quizId","userScore","score","userSubmission","quizData","questions","values","map","question","uuid","text","answers","answersArray","Array","isArray","correctAnswers","filter","answer","correct","userSelectedAnswers","includes","isCorrect","length","correctUuids","sort","selectedUuids","every","index","selectedAnswer","resultsLabel","join","correctAnswer"],"sourceRoot":""}
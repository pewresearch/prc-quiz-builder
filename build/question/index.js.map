{"version":3,"file":"question/index.js","mappings":"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","sources":["webpack://@prc/quiz-builder/webpack/runtime/chunk loaded","webpack://@prc/quiz-builder/external window [\"wp\",\"blocks\"]","webpack://@prc/quiz-builder/../../node_modules/clsx/dist/clsx.mjs","webpack://@prc/quiz-builder/external window \"prcHooks\"","webpack://@prc/quiz-builder/external window [\"wp\",\"i18n\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"element\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"blockEditor\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"data\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"components\"]","webpack://@prc/quiz-builder/external window \"prcQuizSharedComponents\"","webpack://@prc/quiz-builder/external window \"ReactJSXRuntime\"","webpack://@prc/quiz-builder/./src/question/controls.js","webpack://@prc/quiz-builder/external window \"prcIcons\"","webpack://@prc/quiz-builder/./src/question/icon.js","webpack://@prc/quiz-builder/./src/question/thermometer-template.js","webpack://@prc/quiz-builder/./src/question/variations.js","webpack://@prc/quiz-builder/./src/question/index.js","webpack://@prc/quiz-builder/./src/question/edit.js","webpack://@prc/quiz-builder/./src/question/save.js","webpack://@prc/quiz-builder/./src/question/question-binding.js","webpack://@prc/quiz-builder/webpack/bootstrap","webpack://@prc/quiz-builder/webpack/runtime/hasOwnProperty shorthand","webpack://@prc/quiz-builder/webpack/runtime/jsonp chunk loading","webpack://@prc/quiz-builder/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcHooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcQuizSharedComponents\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/* eslint-disable import/no-relative-packages */\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tInspectorControls,\n\tInspectorAdvancedControls,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tBaseControl,\n\tToggleControl,\n\tTextControl,\n\tTextareaControl,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\n\nimport {\n\tJSONSortableList,\n\tConditionalPanel,\n\tUUIDCopyToClipboard,\n} from '@prc/quiz-components';\n\nfunction DemographicBreaksControls({ attributes, setAttributes, labels }) {\n\tconst { demoBreakValues } = attributes;\n\n\t// eslint-disable-next-line max-len\n\t// If there are no demographicBreakdown values then set to an array of empty strings matching the length of the labels array\n\tconst initValues =\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tundefined === demoBreakValues\n\t\t\t? labels.map(() => '')\n\t\t\t: JSON.parse(demoBreakValues).length !== labels.length\n\t\t\t\t? [...JSON.parse(demoBreakValues), '']\n\t\t\t\t: JSON.parse(demoBreakValues);\n\n\treturn (\n\t\t<JSONSortableList\n\t\t\tlabel={__('Demographic Break Values', 'prc-quiz')}\n\t\t\thelp={__(\n\t\t\t\t'If there are demographic breaks set in the controller block, the corresponding fields will appear here. You can assign values to each category on a per-question basis.',\n\t\t\t\t'prc-quiz'\n\t\t\t)}\n\t\t\tvalues={initValues}\n\t\t\tlabels={labels}\n\t\t\tonChange={(values) => {\n\t\t\t\tsetAttributes({ demoBreakValues: JSON.stringify(values) });\n\t\t\t}}\n\t\t\tdisableAddingItems\n\t\t\tallowReset\n\t\t/>\n\t);\n}\n\nexport default function Controls({\n\tattributes,\n\tsetAttributes,\n\tclientId,\n\tcontext,\n}) {\n\tconst {\n\t\tuuid,\n\t\tinternalId,\n\t\ttype,\n\t\trandomizeAnswers,\n\t\tconditionalDisplay,\n\t\tconditionalAnswerUuid,\n\t\tquestion,\n\t} = attributes;\n\n\tconst quizType = context['prc-quiz/type'];\n\tconst demoBreakLabels = context['prc-quiz/demo-break-labels'];\n\n\tconst displayAdvancedDemoBreaks =\n\t\t'quiz' === quizType &&\n\t\tundefined !== demoBreakLabels &&\n\t\t'thermometer' !== type;\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Question Settings')}>\n\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\tlabel={__('Question Text', 'prc-quiz')}\n\t\t\t\t\t\tvalue={question}\n\t\t\t\t\t\tplaceholder={__('Enter question text here...')}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ question: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t{'thermometer' !== type && (\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__('Randomize Answer Order', 'prc-quiz')}\n\t\t\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\t\t'When enabled answer order will be randomized on the frontend. When disabled, answers will appear in the order they are defined in the block editor.'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tchecked={randomizeAnswers}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\trandomizeAnswers: !randomizeAnswers,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</PanelBody>\n\t\t\t\t<ConditionalPanel\n\t\t\t\t\tattributes={attributes}\n\t\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\t\tblockType=\"question\"\n\t\t\t\t>\n\t\t\t\t\t<UUIDCopyToClipboard\n\t\t\t\t\t\tuuid={uuid}\n\t\t\t\t\t\tlabel={__('Question ID')}\n\t\t\t\t\t/>\n\t\t\t\t</ConditionalPanel>\n\t\t\t</InspectorControls>\n\t\t\t<InspectorAdvancedControls>\n\t\t\t\t{displayAdvancedDemoBreaks && (\n\t\t\t\t\t<DemographicBreaksControls\n\t\t\t\t\t\tattributes={attributes}\n\t\t\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\t\t\tlabels={\n\t\t\t\t\t\t\tundefined === demoBreakLabels\n\t\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t\t: JSON.parse(demoBreakLabels)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t<BaseControl\n\t\t\t\t\tid=\"question-internal-id\"\n\t\t\t\t\tlabel={__('Internal ID')}\n\t\t\t\t\thelp={__(\n\t\t\t\t\t\t'This field identifies the question in the scoring process. If left empty, an auto-generated ID will be used. For \"typology\" or \"freeform\" quizzes, research teams often have an internal ID for scoring in their Excel file. Use that ID here for consistency.'\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tvalue={internalId}\n\t\t\t\t\t\tonChange={(value) =>\n\t\t\t\t\t\t\tsetAttributes({ internalId: value })\n\t\t\t\t\t\t}\n\t\t\t\t\t\tplaceholder={__(\n\t\t\t\t\t\t\t'Enter internal research ID e.g. \"govsize3\"'\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</BaseControl>\n\t\t\t</InspectorAdvancedControls>\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","/**\n * Internal Dependencies\n */\nimport { Icon as PRCIcon } from '@prc/icons';\n\nexport default function Icon({ variant = 'default' }) {\n\tif ('conditional' === variant) {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor: '#f0b849',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<PRCIcon icon=\"circle-question\" />\n\t\t\t</span>\n\t\t);\n\t}\n\tif ('thermometer' === variant) {\n\t\treturn <PRCIcon icon=\"temperature-three-quarters\" />;\n\t}\n\treturn <PRCIcon icon=\"circle-question\" />;\n}\n","export default {\n\tquestionAttributes: {\n\t\tstyle: {\n\t\t\tspacing: {\n\t\t\t\tblockGap: 'var:preset|spacing|30',\n\t\t\t},\n\t\t},\n\t\tlayout: {\n\t\t\ttype: 'flex',\n\t\t\torientation: 'horizontal',\n\t\t\tverticalAlignment: 'center',\n\t\t\tjustifyContent: 'space-between',\n\t\t\tflexWrap: 'wrap',\n\t\t},\n\t},\n\tquestionInnerBlocks: [\n\t\t[\n\t\t\t'core/paragraph',\n\t\t\t{\n\t\t\t\tmetadata: {\n\t\t\t\t\tbindings: {\n\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\tsource: 'prc-quiz/question',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tfontSize: 'medium',\n\t\t\t},\n\t\t\t[],\n\t\t],\n\t\t[\n\t\t\t'core/group',\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tspacing: {\n\t\t\t\t\t\tblockGap: '0',\n\t\t\t\t\t},\n\t\t\t\t\tlayout: {\n\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\tflexSize: '100%',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tlayout: {\n\t\t\t\t\ttype: 'flex',\n\t\t\t\t\tflexWrap: 'nowrap',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t},\n\t\t\t},\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '0',\n\t\t\t\t\t\tpoints: 0,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '10',\n\t\t\t\t\t\tpoints: 1,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '20',\n\t\t\t\t\t\tpoints: 2,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '30',\n\t\t\t\t\t\tpoints: 3,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '40',\n\t\t\t\t\t\tpoints: 4,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '50',\n\t\t\t\t\t\tpoints: 5,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '60',\n\t\t\t\t\t\tpoints: 6,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '70',\n\t\t\t\t\t\tpoints: 7,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '80',\n\t\t\t\t\t\tpoints: 8,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '90',\n\t\t\t\t\t\tpoints: 9,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tright: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-quiz/answer',\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer: '100',\n\t\t\t\t\t\tpoints: 10,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\tselfStretch: 'fixed',\n\t\t\t\t\t\t\t\tflexSize: '10%',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\t\tleft: {\n\t\t\t\t\t\t\t\t\twidth: '0px',\n\t\t\t\t\t\t\t\t\tstyle: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttop: {},\n\t\t\t\t\t\t\t\tbottom: {},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaceholder: 'Start typing your answer here...',\n\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t],\n\t],\n};\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport Icon from './icon';\nimport thermometerTemplate from './thermometer-template';\n\nexport default [\n\t{\n\t\tname: 'single-choice',\n\t\tisDefault: true,\n\t\ttitle: __('Single Choice Question'),\n\t\tdescription: __('A question with a single correct answer'),\n\t\tattributes: { type: 'single' },\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes) =>\n\t\t\t'single' === blockAttributes.type &&\n\t\t\t!blockAttributes.conditionalDisplay,\n\t},\n\t{\n\t\tname: 'multiple-choice',\n\t\ttitle: __('Multiple Choice Question'),\n\t\tdescription: __('A question with multiple correct answers'),\n\t\tattributes: { type: 'multiple' },\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes) =>\n\t\t\t'multiple' === blockAttributes.type &&\n\t\t\t!blockAttributes.conditionalDisplay,\n\t},\n\t{\n\t\tname: 'thermometer',\n\t\ttitle: __('Thermometer Question'),\n\t\tdescription: __(\n\t\t\t'A question with with a scale of answers, a \"thermometer\".'\n\t\t),\n\t\ticon: <Icon variant=\"thermometer\" />,\n\t\tattributes: {\n\t\t\ttype: 'thermometer',\n\t\t\t...thermometerTemplate.questionAttributes,\n\t\t},\n\t\tscope: ['inserter', 'transform'],\n\t\tinnerBlocks: thermometerTemplate.questionInnerBlocks,\n\t\tisActive: (blockAttributes) => 'thermometer' === blockAttributes.type,\n\t},\n\t{\n\t\tname: 'conditional-single-choice',\n\t\ttitle: __('Single Choice Question (Conditional)'),\n\t\tdescription: __(\n\t\t\t'A single choice question that is only shown if a previous question is answered with a specific answer.'\n\t\t),\n\t\ticon: <Icon variant=\"conditional\" />,\n\t\tattributes: { type: 'single', conditionalDisplay: true },\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes) =>\n\t\t\t'single' === blockAttributes.type &&\n\t\t\tblockAttributes.conditionalDisplay,\n\t},\n\t{\n\t\tname: 'conditional-multiple-choice',\n\t\ttitle: __('Multiple Choice Question (Conditional)'),\n\t\tdescription: __(\n\t\t\t'A multiple choice question that is only shown if a previous question is answered with a specific answer.'\n\t\t),\n\t\ticon: <Icon variant=\"conditional\" />,\n\t\tattributes: { type: 'multiple', conditionalDisplay: true },\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes) =>\n\t\t\t'multiple' === blockAttributes.type &&\n\t\t\tblockAttributes.conditionalDisplay,\n\t},\n];\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport './style.scss';\nimport './editor.scss';\nimport edit from './edit';\nimport save from './save';\nimport icon from './icon';\nimport variations from './variations';\nimport registerQuestionBinding from './question-binding';\n\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\ticon,\n\tedit,\n\tsave,\n\tvariations,\n};\n\nregisterQuestionBinding();\n\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * External Dependencies\n */\nimport clsx from 'clsx';\nimport { useHasSelectedInnerBlock } from '@prc/hooks';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useMemo } from '@wordpress/element';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tInnerBlocks,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal Dependencies\n */\n// eslint-disable-next-line import/no-relative-packages\nimport Controls from './controls';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {Object}   props.attributes    Available block attributes.\n * @param {Function} props.setAttributes Function that updates individual attributes.\n * @param {Object}   props.context       Block context from parent blocks.\n * @param {string}   props.clientId      Block client ID.\n *\n * @return {WPElement} Element to render.\n */\n// eslint-disable-next-line max-lines-per-function\nexport default function Edit({\n\tattributes,\n\tsetAttributes,\n\tcontext,\n\tclientId,\n\t__unstableLayoutClassNames: layoutClassNames,\n}) {\n\tconst { question, type, uuid, conditionalDisplay } = attributes;\n\n\tconst quizType = context['prc-quiz/type'];\n\tconst existingUuids = context['prc-quiz/uuids'] || [];\n\tconst blockProps = useBlockProps({\n\t\tclassName: clsx(layoutClassNames),\n\t});\n\n\tconst hasSelectedInnerBlock = useHasSelectedInnerBlock(clientId);\n\n\t// Check if there are any existing blocks\n\tconst { hasBlocks, answerBlocks } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getBlocks, getClientIdsOfDescendants, getBlock } =\n\t\t\t\tselect('core/block-editor');\n\t\t\tconst blocks = getBlocks(clientId);\n\t\t\tconst answerBlocks = getClientIdsOfDescendants(clientId).filter(\n\t\t\t\t(id) => {\n\t\t\t\t\tconst block = getBlock(id);\n\t\t\t\t\treturn block?.name === 'prc-quiz/answer';\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn {\n\t\t\t\thasBlocks: blocks && blocks.length > 0,\n\t\t\t\tanswerBlocks,\n\t\t\t};\n\t\t},\n\t\t[clientId]\n\t);\n\n\tconst isThermometer = 'thermometer' === type;\n\n\t// eslint-disable-next-line max-len\n\t// If the quiz type is not freeform then we want to set the default answer block attributes to be correct: false, this will ensure the answer block is in the true|false correct state instead of \"undefined\" as expected with a freeform quiz.\n\tconst DEFAULT_ANSWER_BLOCK_ATTRS =\n\t\t'freeform' !== quizType ? { correct: false } : {};\n\n\tconst DEFAULT_TEMPLATE = useMemo(() => {\n\t\treturn [\n\t\t\t[\n\t\t\t\t'core/paragraph',\n\t\t\t\t{\n\t\t\t\t\tfontSize: 'medium',\n\t\t\t\t\tplaceholder: __('Enter question text', 'prc-quiz'),\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\tsource: 'prc-quiz/question',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\t[\n\t\t\t\t'prc-quiz/answer',\n\t\t\t\tDEFAULT_ANSWER_BLOCK_ATTRS,\n\t\t\t\t[\n\t\t\t\t\t[\n\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\t}, [DEFAULT_ANSWER_BLOCK_ATTRS]);\n\n\t// eslint-disable-next-line max-len\n\tconst innerBlocksProps = useInnerBlocksProps(blockProps, {\n\t\ttemplateLock: !isThermometer ? false : 'insert',\n\t\ttemplate: DEFAULT_TEMPLATE,\n\t\trenderAppender:\n\t\t\thasSelectedInnerBlock && !isThermometer\n\t\t\t\t? InnerBlocks.ButtonBlockAppender\n\t\t\t\t: undefined,\n\t\t__experimentalDefaultBlock: {\n\t\t\tname: 'prc-quiz/answer',\n\t\t\tattributes: DEFAULT_ANSWER_BLOCK_ATTRS,\n\t\t\tinnerBlocks: [\n\t\t\t\t[\n\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t{\n\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t],\n\t\t},\n\t\t__experimentalDirectInsert: !hasBlocks,\n\t});\n\n\t/**\n\t * Iniitalize a uuid for the question block.\n\t */\n\tuseEffect(() => {\n\t\t// If a uuid is already set, check if existinguuids includes it, and if it does does it have this clientId? If not then lets set a new uuid using this clientId.\n\t\tif (\n\t\t\tuuid &&\n\t\t\tObject.keys(existingUuids).includes(uuid) &&\n\t\t\texistingUuids[uuid] !== clientId\n\t\t) {\n\t\t\tconsole.log('Setting new question uuid');\n\t\t\tsetAttributes({\n\t\t\t\tuuid: clientId,\n\t\t\t});\n\t\t}\n\t\t// If the uuid is not set, set it to the clientId.\n\t\tif (!uuid) {\n\t\t\tsetAttributes({\n\t\t\t\tuuid: clientId,\n\t\t\t});\n\t\t}\n\t}, [existingUuids]);\n\n\treturn (\n\t\t<>\n\t\t\t<Controls\n\t\t\t\tattributes={attributes}\n\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\tclientId={clientId}\n\t\t\t\tcontext={context}\n\t\t\t/>\n\t\t\t<div {...innerBlocksProps} />\n\t\t</>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function Save({ attributes }) {\n\tconst blockProps = useBlockProps.save();\n\tconst innerBlocksProps = useInnerBlocksProps.save(blockProps);\n\n\treturn <div {...innerBlocksProps} />;\n}\n","import {\n\tregisterBlockBindingsSource,\n\tregisterBlockVariation,\n} from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nexport default function registerQuestionBinding() {\n\tregisterBlockBindingsSource({\n\t\tname: 'prc-quiz/question',\n\t\tlabel: __('Quiz Question', 'prc-quiz'),\n\t\tusesContext: ['prc-quiz/question/text', 'prc-quiz/question/uuid'],\n\t\tgetValues({ select, context }) {\n\t\t\tconst question = context['prc-quiz/question/text'];\n\t\t\tif (question) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: question,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {};\n\t\t},\n\t\tsetValues({ select, dispatch, context, bindings }) {\n\t\t\tconst { newValue } = bindings.content;\n\t\t\tconst { getSelectedBlockClientId, getBlockRootClientId } =\n\t\t\t\tselect(blockEditorStore);\n\t\t\tconst { updateBlockAttributes } = dispatch(blockEditorStore);\n\n\t\t\t// Get the currently selected paragraph block.\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\t\t// Find the root, question block.\n\t\t\tconst questionBlockClientId = getBlockRootClientId(\n\t\t\t\tselectedBlockClientId\n\t\t\t);\n\n\t\t\tupdateBlockAttributes(questionBlockClientId, {\n\t\t\t\tquestion: newValue,\n\t\t\t});\n\t\t},\n\t\tcanUserEditValue({ select, context }) {\n\t\t\treturn true;\n\t\t},\n\t});\n\n\tregisterBlockVariation('core/paragraph', {\n\t\tname: 'prc-quiz-question-text',\n\t\ttitle: __('Question Text', 'prc-quiz'),\n\t\tdescription: __('Displays the question text.', 'prc-quiz'),\n\t\tattributes: {\n\t\t\tfontSize: 'medium',\n\t\t\tmetadata: {\n\t\t\t\tbindings: {\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\tsource: 'prc-quiz/question',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tisActive: (blockAttributes, variationAttributes) => {\n\t\t\treturn (\n\t\t\t\tblockAttributes.metadata?.bindings?.content?.source ===\n\t\t\t\tvariationAttributes.metadata?.bindings.content.source\n\t\t\t);\n\t\t},\n\t});\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t646: 0,\n\t754: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunk_prc_quiz_builder\"] = globalThis[\"webpackChunk_prc_quiz_builder\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [754], () => (__webpack_require__(450)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","r","e","t","f","n","Array","isArray","o","length","arguments","DemographicBreaksControls","attributes","setAttributes","labels","demoBreakValues","initValues","undefined","map","JSON","parse","_jsx","JSONSortableList","label","__","help","values","onChange","stringify","disableAddingItems","allowReset","Controls","clientId","context","uuid","internalId","type","randomizeAnswers","conditionalDisplay","conditionalAnswerUuid","question","quizType","demoBreakLabels","displayAdvancedDemoBreaks","_jsxs","_Fragment","children","InspectorControls","PanelBody","title","TextareaControl","value","placeholder","ToggleControl","checked","ConditionalPanel","blockType","UUIDCopyToClipboard","InspectorAdvancedControls","BaseControl","id","TextControl","Icon","variant","style","color","PRCIcon","icon","questionAttributes","spacing","blockGap","layout","orientation","verticalAlignment","justifyContent","flexWrap","questionInnerBlocks","metadata","bindings","content","source","fontSize","selfStretch","flexSize","answer","points","border","right","width","left","top","bottom","name","isDefault","description","scope","isActive","blockAttributes","thermometerTemplate","innerBlocks","settings","edit","__unstableLayoutClassNames","layoutClassNames","existingUuids","blockProps","useBlockProps","className","clsx","hasSelectedInnerBlock","useHasSelectedInnerBlock","hasBlocks","answerBlocks","useSelect","select","getBlocks","getClientIdsOfDescendants","getBlock","blocks","filter","block","isThermometer","DEFAULT_ANSWER_BLOCK_ATTRS","correct","DEFAULT_TEMPLATE","useMemo","innerBlocksProps","useInnerBlocksProps","templateLock","template","renderAppender","InnerBlocks","ButtonBlockAppender","__experimentalDefaultBlock","__experimentalDirectInsert","useEffect","Object","keys","includes","console","log","save","variations","registerBlockBindingsSource","usesContext","getValues","setValues","dispatch","newValue","getSelectedBlockClientId","getBlockRootClientId","blockEditorStore","updateBlockAttributes","canUserEditValue","registerBlockVariation","variationAttributes","registerBlockType","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","key","splice","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","globalThis","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}
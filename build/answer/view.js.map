{"version":3,"file":"answer/view.js","mappings":"2CACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICIlF,MAAM,GAJGI,EAI8B,CAAE,WAAgB,IAAOC,EAAwE,WAAG,WAAgB,IAAOA,EAAwE,WAAG,MAAW,IAAOA,EAAmE,MAAG,cAAmB,IAAOA,EAA2E,eAHraC,EAAI,CAAC,EAAGhB,EAAoBiB,EAAED,EAAGF,GAAWE,ICY3C,MAAEE,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,OAAM,sBAAuB,CACvDF,MAAO,CACN,oBAAIG,GACH,MAAM,KAAEC,EAAI,aAAEC,EAAY,gBAAEC,IAAoBC,EAAAA,EAAAA,cAChD,OAAOD,EAAgBD,IAAeG,SAASJ,EAChD,GAEDH,QAAS,CAKRQ,eAAeC,EAAAA,EAAAA,gBAAeC,IAC7BA,EAAMC,iBACN,MAAMC,GAAUN,EAAAA,EAAAA,eACV,IAAEO,IAAQC,EAAAA,EAAAA,eACV,KAAEX,EAAI,gBAAEE,EAAe,aAAEU,EAAY,aAAEX,GAC5CQ,EACD,GAAIC,EAAIG,aAAa,YACpB,OAGD,MAAMC,EAAiBZ,EAAgBD,IAAiB,GAClDc,EAAoBD,EAAeV,SAASJ,GAKhDS,EAAQP,gBAAgBD,GAHL,WAAjBW,GAA8C,gBAAjBA,EAC5BG,EAEqC,GAGA,CAACf,GAItCe,EAGFD,EAAeE,QAAQC,GAAaA,IAAajB,IAGV,IACpCc,EACHd,GAKHH,EAAQqB,kBAAkB,OD7DrB,IAAC1B,EACJE","sources":["webpack://@prc/quiz-builder/webpack/bootstrap","webpack://@prc/quiz-builder/webpack/runtime/define property getters","webpack://@prc/quiz-builder/webpack/runtime/hasOwnProperty shorthand","webpack://@prc/quiz-builder/external module \"@wordpress/interactivity\"","webpack://@prc/quiz-builder/./src/answer/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store), [\"withSyncEvent\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.withSyncEvent) });","/**\n * WordPress Dependencies\n */\nimport {\n\tstore,\n\tgetContext,\n\tgetElement,\n\tgetServerContext,\n\twithScope,\n\twithSyncEvent,\n\tgetServerState,\n} from '@wordpress/interactivity';\n\nconst { state, actions } = store('prc-quiz/controller', {\n\tstate: {\n\t\tget isAnswerSelected() {\n\t\t\tconst { uuid, questionUuid, selectedAnswers } = getContext();\n\t\t\treturn selectedAnswers[questionUuid]?.includes(uuid);\n\t\t},\n\t},\n\tactions: {\n\t\t/**\n\t\t * When an answer is clicked, we need to add the answer's uuid to the private _selectedAnswers array.\n\t\t * The prc-quiz/question block will watch this array and update the controller's selectedAnswers context with each update.\n\t\t */\n\t\tonAnswerClick: withSyncEvent((event) => {\n\t\t\tevent.preventDefault();\n\t\t\tconst context = getContext();\n\t\t\tconst { ref } = getElement();\n\t\t\tconst { uuid, selectedAnswers, questionType, questionUuid } =\n\t\t\t\tcontext;\n\t\t\tif (ref.hasAttribute('disabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentAnswers = selectedAnswers[questionUuid] || [];\n\t\t\tconst isAlreadySelected = currentAnswers.includes(uuid);\n\n\t\t\tif (questionType === 'single' || questionType === 'thermometer') {\n\t\t\t\tif (isAlreadySelected) {\n\t\t\t\t\t// Remove the answer if already selected\n\t\t\t\t\tcontext.selectedAnswers[questionUuid] = [];\n\t\t\t\t} else {\n\t\t\t\t\t// Add the answer if not selected\n\t\t\t\t\tcontext.selectedAnswers[questionUuid] = [uuid];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// For multiple choice questions, toggle the answer selection\n\t\t\t\tif (isAlreadySelected) {\n\t\t\t\t\t// Remove the answer if already selected\n\t\t\t\t\tcontext.selectedAnswers[questionUuid] =\n\t\t\t\t\t\tcurrentAnswers.filter((answerId) => answerId !== uuid);\n\t\t\t\t} else {\n\t\t\t\t\t// Add the answer if not selected\n\t\t\t\t\tcontext.selectedAnswers[questionUuid] = [\n\t\t\t\t\t\t...currentAnswers,\n\t\t\t\t\t\tuuid,\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tactions.saveQuizProgress();\n\t\t}),\n\t},\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","d","state","actions","store","isAnswerSelected","uuid","questionUuid","selectedAnswers","getContext","includes","onAnswerClick","withSyncEvent","event","preventDefault","context","ref","getElement","questionType","hasAttribute","currentAnswers","isAlreadySelected","filter","answerId","saveQuizProgress"],"sourceRoot":""}
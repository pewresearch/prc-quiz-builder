{"version":3,"file":"answer/index.js","mappings":"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","sources":["webpack://@prc/quiz-builder/webpack/runtime/chunk loaded","webpack://@prc/quiz-builder/external window [\"wp\",\"blocks\"]","webpack://@prc/quiz-builder/../../node_modules/clsx/dist/clsx.m.js","webpack://@prc/quiz-builder/external window [\"wp\",\"i18n\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"element\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"data\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"blockEditor\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"components\"]","webpack://@prc/quiz-builder/external window \"prcQuizSharedComponents\"","webpack://@prc/quiz-builder/external window \"ReactJSXRuntime\"","webpack://@prc/quiz-builder/./src/answer/controls.js","webpack://@prc/quiz-builder/external window \"prcIcons\"","webpack://@prc/quiz-builder/./src/answer/icon.js","webpack://@prc/quiz-builder/./src/answer/correct-toggle.js","webpack://@prc/quiz-builder/./src/answer/save.js","webpack://@prc/quiz-builder/./src/answer/variations.js","webpack://@prc/quiz-builder/./src/answer/index.js","webpack://@prc/quiz-builder/./src/answer/deprecation.js","webpack://@prc/quiz-builder/./src/answer/edit.js","webpack://@prc/quiz-builder/./src/answer/answer-binding.js","webpack://@prc/quiz-builder/webpack/bootstrap","webpack://@prc/quiz-builder/webpack/runtime/hasOwnProperty shorthand","webpack://@prc/quiz-builder/webpack/runtime/jsonp chunk loading","webpack://@prc/quiz-builder/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcQuizSharedComponents\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/* eslint-disable import/no-relative-packages */\n/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useEffect, useCallback } from '@wordpress/element';\nimport { InspectorControls, BlockControls } from '@wordpress/block-editor';\nimport {\n\tButton,\n\tPanelBody,\n\tBaseControl,\n\t__experimentalNumberControl as NumberControl,\n\tTextareaControl,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { UUIDCopyToClipboard, ConditionalPanel } from '@prc/quiz-components';\n\nexport default function Controls({\n\tattributes,\n\tclientId,\n\tcontext,\n\tsetAttributes,\n\thandleToggleCorrect,\n}) {\n\tconst { uuid, points, correct, resultsLabel, answer } = attributes;\n\n\tconst quizType = context['prc-quiz/type'];\n\n\t// Memoize onChange handlers to prevent unnecessary re-renders\n\tconst handleAnswerChange = useCallback(\n\t\t(value) => {\n\t\t\tsetAttributes({ answer: value });\n\t\t},\n\t\t[setAttributes]\n\t);\n\n\tconst handlePointsChange = useCallback(\n\t\t(p) => {\n\t\t\tsetAttributes({ points: Number(p) });\n\t\t},\n\t\t[setAttributes]\n\t);\n\n\tconst handleResultsLabelChange = useCallback(\n\t\t(r) => {\n\t\t\tsetAttributes({ resultsLabel: r });\n\t\t},\n\t\t[setAttributes]\n\t);\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={__('Answer Settings')}>\n\t\t\t\t<TextareaControl\n\t\t\t\t\tlabel={__('Answer Text', 'prc-quiz')}\n\t\t\t\t\tvalue={answer}\n\t\t\t\t\tonChange={handleAnswerChange}\n\t\t\t\t\tplaceholder={__('Enter answer text here...')}\n\t\t\t\t/>\n\t\t\t\t{'freeform' !== quizType && (\n\t\t\t\t\t<BaseControl\n\t\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\t'Marking an answer as correct will automatically assign 1 point to the answer. Marking an answer as incorrect will automatically assign 0 points to the answer. You can modify these after initially marking the answer as correct or incorrect.'\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\tonClick={handleToggleCorrect}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{correct\n\t\t\t\t\t\t\t\t? __('Mark as Incorrect', 'prc-quiz')\n\t\t\t\t\t\t\t\t: __('Mark as Correct', 'prc-quiz')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</BaseControl>\n\t\t\t\t)}\n\t\t\t\t<NumberControl\n\t\t\t\t\tlabel=\"Points\"\n\t\t\t\t\thelp={`How many points this answer is worth?`}\n\t\t\t\t\tvalue={points}\n\t\t\t\t\tonChange={handlePointsChange}\n\t\t\t\t\tmin={'freeform' === quizType ? -Infinity : 0}\n\t\t\t\t/>\n\t\t\t\t<TextareaControl\n\t\t\t\t\tlabel=\"Results Label\"\n\t\t\t\t\thelp={__(\n\t\t\t\t\t\t`Use this as alternative text for the answer on the results page. You can elaborate on the message here. For example, the Results Table block will display this text for each answer instead of the answer text itself.`\n\t\t\t\t\t)}\n\t\t\t\t\tvalue={resultsLabel}\n\t\t\t\t\tonChange={handleResultsLabelChange}\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\t\t\t<ConditionalPanel\n\t\t\t\tattributes={attributes}\n\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\tblockType=\"answer\"\n\t\t\t>\n\t\t\t\t<UUIDCopyToClipboard uuid={uuid} label={__('Answer ID')} />\n\t\t\t</ConditionalPanel>\n\t\t</InspectorControls>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","/**\n * WordPress Dependencies\n */\nimport { Icon as PRCIcon } from '@prc/icons';\n\nexport default function Icon({ variant = '' }) {\n\tif ('conditionalCorrect' === variant) {\n\t\treturn (\n\t\t\t<span style={{ color: '#f0b849' }}>\n\t\t\t\t<PRCIcon icon=\"circle-check\" />\n\t\t\t</span>\n\t\t);\n\t}\n\tif ('incorrect' === variant) {\n\t\treturn <PRCIcon icon=\"circle-xmark\" />;\n\t}\n\tif ('conditionalIncorrect' === variant) {\n\t\treturn (\n\t\t\t<span style={{ color: '#f0b849' }}>\n\t\t\t\t<PRCIcon icon=\"circle-xmark\" />\n\t\t\t</span>\n\t\t);\n\t}\n\tif ('conditional' === variant) {\n\t\treturn (\n\t\t\t<span style={{ color: '#f0b849' }}>\n\t\t\t\t<PRCIcon icon=\"circle-question\" />\n\t\t\t</span>\n\t\t);\n\t}\n\treturn <PRCIcon icon=\"circle-check\" />;\n}\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { BlockControls } from '@wordpress/block-editor';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal Dependencies\n */\nimport Icon from './icon';\n\nexport function CorrectToolbar({ context, correct, onToggle }) {\n\tconst quizType = context['prc-quiz/type'];\n\tconst controls = useMemo(() => {\n\t\tif ('freeform' === quizType) {\n\t\t\treturn [];\n\t\t}\n\t\treturn [\n\t\t\t{\n\t\t\t\ticon: <Icon variant={correct ? `correct` : 'incorrect'} />,\n\t\t\t\ttitle: correct ? __('Correct Answer') : __('Incorrect Answer'),\n\t\t\t\tisActive: correct,\n\t\t\t\tonClick: () => {\n\t\t\t\t\tonToggle();\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}, [correct, quizType, onToggle]);\n\treturn <BlockControls controls={controls} />;\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\n\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function Save({ attributes }) {\n\tconst blockProps = useBlockProps.save();\n\tconst innerBlocksProps = useInnerBlocksProps.save(blockProps);\n\n\treturn <div {...innerBlocksProps} />;\n}\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport Icon from './icon';\n\nexport default [\n\t{\n\t\tname: 'answer',\n\t\ttitle: __('Answer'),\n\t\tdescription: __(\n\t\t\t'An answer with neither a correct nor an incorrect choice.'\n\t\t),\n\t\tisDefault: true,\n\t\ticon: <Icon />,\n\t\tscope: ['inserter'],\n\t\tinnerBlocks: [\n\t\t\t[\n\t\t\t\t'core/paragraph',\n\t\t\t\t{\n\t\t\t\t\tplaceholder: __(\n\t\t\t\t\t\t'Start typing your answer here...',\n\t\t\t\t\t\t'prc-quiz'\n\t\t\t\t\t),\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t],\n\t\tisActive: (blockAttributes) =>\n\t\t\tundefined === blockAttributes.correct &&\n\t\t\t!blockAttributes.conditionalDisplay,\n\t},\n\t{\n\t\tname: 'answer-correct',\n\t\ttitle: __('Correct Answer'),\n\t\tdescription: __('A correct answer.'),\n\t\ticon: <Icon variant=\"correct\" />,\n\t\tattributes: { correct: false },\n\t\tscope: [],\n\t\tisActive: (blockAttributes) =>\n\t\t\ttrue === blockAttributes.correct &&\n\t\t\t!blockAttributes.conditionalDisplay,\n\t},\n\t{\n\t\tname: 'answer-incorrect',\n\t\ttitle: __('Incorrect Answer'),\n\t\tdescription: __('An incorrect answer'),\n\t\ticon: <Icon variant=\"incorrect\" />,\n\t\tattributes: { correct: true },\n\t\tscope: [],\n\t\tisActive: (blockAttributes) =>\n\t\t\tfalse === blockAttributes.correct &&\n\t\t\t!blockAttributes.conditionalDisplay,\n\t},\n\t{\n\t\tname: 'conditional-answer',\n\t\ttitle: __('Answer'),\n\t\tdescription: __(\n\t\t\t'An answer, neither incorrect nor correct. It is only shown if a previous question is answered with a specific answer.'\n\t\t),\n\t\ticon: <Icon variant=\"conditional\" />,\n\t\tattributes: { conditionalDisplay: true },\n\t\tscope: [],\n\t\tisActive: (blockAttributes) =>\n\t\t\tundefined === blockAttributes.correct &&\n\t\t\tblockAttributes.conditionalDisplay,\n\t},\n\t{\n\t\tname: 'conditional-answer-correct',\n\t\ttitle: __('Correct Answer'),\n\t\tdescription: __(\n\t\t\t'An answer that is correct. It is only shown if a previous question is answered with a specific answer.'\n\t\t),\n\t\ticon: <Icon variant=\"conditionalCorrect\" />,\n\t\tattributes: { correct: true, conditionalDisplay: true },\n\t\tscope: [],\n\t\tisActive: (blockAttributes) =>\n\t\t\ttrue === blockAttributes.correct &&\n\t\t\tblockAttributes.conditionalDisplay,\n\t},\n\t{\n\t\tname: 'conditional-answer-incorrect',\n\t\ttitle: __('Incorrect Answer'),\n\t\tdescription: __(\n\t\t\t'An answer that is incorrect. It is only shown if a previous question is answered with a specific answer.'\n\t\t),\n\t\ticon: <Icon variant=\"conditionalIncorrect\" />,\n\t\tattributes: { correct: false, conditionalDisplay: true },\n\t\tscope: [],\n\t\tisActive: (blockAttributes) =>\n\t\t\tfalse === blockAttributes.correct &&\n\t\t\tblockAttributes.conditionalDisplay,\n\t},\n];\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport './style.scss';\nimport './editor.scss';\nimport edit from './edit';\nimport save from './save';\nimport variations from './variations';\nimport icon from './icon';\nimport registerAnswerBinding from './answer-binding';\nimport { initDeprecation } from './deprecation';\n\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst deprecated = initDeprecation(\n\tmetadata.attributes,\n\tmetadata.supports,\n\tsave\n);\n\nconst settings = {\n\tedit,\n\tsave,\n\tvariations,\n\tdeprecated,\n\ticon,\n};\n\nregisterAnswerBinding();\n\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Initialize the deprecation.\n *\n * @param {Object} attributes - The attributes of the block.\n * @param {Object} supports - The supports of the block.\n * @param {Function} save - The save function of the block.\n */\nexport function initDeprecation(attributes, supports, save) {\n\treturn [\n\t\t{\n\t\t\tattributes,\n\t\t\tsupports,\n\t\t\tsave,\n\t\t\tmigrate: (attributes, innerBlocks) => {\n\t\t\t\tconst answerBinding = createBlock('core/paragraph', {\n\t\t\t\t\tplaceholder: __(\n\t\t\t\t\t\t'Start typing your answer here...',\n\t\t\t\t\t\t'prc-quiz'\n\t\t\t\t\t),\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tif (innerBlocks.length <= 0 || !Array.isArray(innerBlocks)) {\n\t\t\t\t\tinnerBlocks = [answerBinding];\n\t\t\t\t}\n\t\t\t\treturn [attributes, innerBlocks];\n\t\t\t},\n\t\t\tisEligible: (attributes, innerBlocks) => {\n\t\t\t\treturn innerBlocks.length <= 0 || !Array.isArray(innerBlocks);\n\t\t\t},\n\t\t},\n\t];\n}\n","/**\n * External Dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch, select } from '@wordpress/data';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\n// eslint-disable-next-line import/no-relative-packages\nimport Controls from './controls';\nimport { CorrectToolbar } from './correct-toggle';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @param {Object}   props                   Properties passed to the function.\n * @param {Object}   props.attributes        Available block attributes.\n * @param            props.className\n * @param            props.clientId\n * @param            props.context\n * @param            props.isSelected\n * @param            props.insertBlocksAfter\n * @param {Function} props.setAttributes     Function that updates individual attributes.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({\n\tattributes,\n\tclassName,\n\tclientId,\n\tcontext,\n\tsetAttributes,\n\tisSelected,\n\tinsertBlocksAfter,\n\t__unstableLayoutClassNames: layoutClassNames,\n}) {\n\tconst { correct, uuid, conditionalDisplay } = attributes;\n\tconst existingUuids = context['prc-quiz/uuids'] || [];\n\n\t// Determine quiz and question types from context (stable across renders)\n\tconst quizType = context['prc-quiz/type'];\n\tconst questionType = context['prc-quiz/question/type'];\n\n\t// Access block editor dispatcher once (hooks must be top-level)\n\tconst { updateBlockAttributes } = useDispatch(blockEditorStore);\n\n\t/**\n\t * Handle toggling the correct state for this answer.\n\t * For single-choice questions, ensures only one answer can be correct.\n\t */\n\tconst handleToggleCorrect = () => {\n\t\tif ('freeform' === quizType) {\n\t\t\treturn;\n\t\t}\n\t\tconst newCorrectState = !correct;\n\n\t\t// For single-choice questions, set all other answers to false first\n\t\tif (questionType === 'single' && newCorrectState === true) {\n\t\t\t// Find all other answer blocks in the same question\n\t\t\tconst {\n\t\t\t\tgetBlockParentsByBlockName,\n\t\t\t\tgetClientIdsOfDescendants,\n\t\t\t\tgetBlock,\n\t\t\t} = select(blockEditorStore);\n\n\t\t\tconst [questionClientId] = getBlockParentsByBlockName(\n\t\t\t\tclientId,\n\t\t\t\t'prc-quiz/question'\n\t\t\t);\n\n\t\t\tif (questionClientId) {\n\t\t\t\tconst descendantClientIds =\n\t\t\t\t\tgetClientIdsOfDescendants(questionClientId);\n\t\t\t\tconst otherAnswerClientIds = descendantClientIds.filter(\n\t\t\t\t\t(descendantId) => {\n\t\t\t\t\t\tconst block = getBlock(descendantId);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tblock?.name === 'prc-quiz/answer' &&\n\t\t\t\t\t\t\tdescendantId !== clientId\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Set all other answers to false\n\t\t\t\totherAnswerClientIds.forEach((id) => {\n\t\t\t\t\tupdateBlockAttributes(id, { correct: false, points: 0 });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Set this answer's correct state\n\t\tsetAttributes({\n\t\t\tcorrect: newCorrectState,\n\t\t\tpoints: newCorrectState ? 1 : 0,\n\t\t});\n\t};\n\n\tconst blockProps = useBlockProps({\n\t\tclassName: clsx(className, layoutClassNames, {\n\t\t\t'is-correct': correct,\n\t\t}),\n\t});\n\n\tconst innerBlocksProps = useInnerBlocksProps(blockProps, {\n\t\ttemplate: [\n\t\t\t[\n\t\t\t\t'core/paragraph',\n\t\t\t\t{\n\t\t\t\t\tplaceholder: __(\n\t\t\t\t\t\t'Start typing your answer here...',\n\t\t\t\t\t\t'prc-quiz'\n\t\t\t\t\t),\n\t\t\t\t\tmetadata: {\n\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t],\n\t});\n\n\t/**\n\t * Iniitalize a uuid for the answer block.\n\t */\n\tuseEffect(() => {\n\t\t// If a uuid is already set, check if existinguuids includes it, and if it does does it have this clientId? If not then lets set a new uuid using this clientId.\n\t\tif (\n\t\t\tuuid &&\n\t\t\tObject.keys(existingUuids).includes(uuid) &&\n\t\t\texistingUuids[uuid] !== clientId\n\t\t) {\n\t\t\tconsole.log('Setting new answer uuid');\n\t\t\tsetAttributes({\n\t\t\t\tuuid: clientId,\n\t\t\t});\n\t\t}\n\t\t// If the uuid is not set, set it to the clientId.\n\t\tif (!uuid) {\n\t\t\tsetAttributes({\n\t\t\t\tuuid: clientId,\n\t\t\t});\n\t\t}\n\t}, [existingUuids]);\n\n\t/**\n\t * If the quiz type changes to freeform, remove the correct attribute from the answer.\n\t */\n\tuseEffect(() => {\n\t\tif (quizType === 'freeform') {\n\t\t\tsetAttributes({\n\t\t\t\tcorrect: undefined,\n\t\t\t});\n\t\t}\n\t}, [quizType]);\n\n\t/**\n\t * Enforce 1|0 point value for correct|incorrect answers.\n\t */\n\t// useEffect(() => {\n\t// \t// Is this is a freeform quiz do not try to set the points.\n\t// \tif ('freeform' === quizType) {\n\t// \t\treturn;\n\t// \t}\n\n\t// \t// If no points are set and this answer is marked as correct then assign 1 point to this answer.\n\t// \tif ((undefined === points || 0 === points) && true === correct) {\n\t// \t\tsetAttributes({\n\t// \t\t\tpoints: 1,\n\t// \t\t});\n\t// \t}\n\t// \t// If points are set and this answer is marked as inccorrect then remove points from this answer.\n\t// \tif (true !== correct && undefined !== points) {\n\t// \t\tsetAttributes({\n\t// \t\t\tpoints: 0,\n\t// \t\t});\n\t// \t}\n\t// }, [correct, points, quizType, setAttributes]);\n\n\treturn (\n\t\t<>\n\t\t\t<Controls\n\t\t\t\tattributes={attributes}\n\t\t\t\tclientId={clientId}\n\t\t\t\tcontext={context}\n\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\thandleToggleCorrect={handleToggleCorrect}\n\t\t\t/>\n\t\t\t<CorrectToolbar\n\t\t\t\tcontext={context}\n\t\t\t\tcorrect={correct}\n\t\t\t\tonToggle={handleToggleCorrect}\n\t\t\t/>\n\t\t\t<div {...innerBlocksProps}>{innerBlocksProps.children}</div>\n\t\t</>\n\t);\n}\n","import {\n\tregisterBlockBindingsSource,\n\tregisterBlockVariation,\n} from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nexport default function registerAnswerBinding() {\n\tregisterBlockBindingsSource({\n\t\tname: 'prc-quiz/answer',\n\t\tlabel: __('Quiz Answer', 'prc-quiz'),\n\t\tusesContext: ['prc-quiz/answer/text', 'prc-quiz/answer/uuid'],\n\t\tgetValues({ select, context }) {\n\t\t\tconst answer = context['prc-quiz/answer/text'];\n\t\t\tif (answer) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: answer,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tplaceholder: __('Start typing your answer here!', 'prc-quiz'),\n\t\t\t};\n\t\t},\n\t\tsetValues({ select, dispatch, context, bindings }) {\n\t\t\tconst { newValue } = bindings.content;\n\t\t\tconst { getSelectedBlockClientId, getBlockRootClientId } =\n\t\t\t\tselect(blockEditorStore);\n\t\t\tconst { updateBlockAttributes } = dispatch(blockEditorStore);\n\n\t\t\t// Get the currently selected paragraph block.\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\t\t// Find the root, answer block.\n\t\t\tconst answerBlockClientId = getBlockRootClientId(\n\t\t\t\tselectedBlockClientId\n\t\t\t);\n\n\t\t\tupdateBlockAttributes(answerBlockClientId, {\n\t\t\t\tanswer: newValue,\n\t\t\t});\n\t\t},\n\t\tcanUserEditValue({ select, context }) {\n\t\t\treturn true;\n\t\t},\n\t});\n\n\tregisterBlockVariation('core/paragraph', {\n\t\tname: 'prc-quiz-answer-text',\n\t\ttitle: __('Answer Text', 'prc-quiz'),\n\t\tdescription: __('Displays the answer text.', 'prc-quiz'),\n\t\tattributes: {\n\t\t\tplaceholder: __('Start typing your answer here...', 'prc-quiz'),\n\t\t\tmetadata: {\n\t\t\t\tbindings: {\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\tsource: 'prc-quiz/answer',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tancestor: ['prc-quiz/answer'],\n\t\tisActive: (blockAttributes, variationAttributes) => {\n\t\t\treturn (\n\t\t\t\tblockAttributes.metadata?.bindings?.content?.source ===\n\t\t\t\tvariationAttributes.metadata?.bindings.content.source\n\t\t\t);\n\t\t},\n\t});\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t660: 0,\n\t716: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunk_prc_quiz_builder\"] = globalThis[\"webpackChunk_prc_quiz_builder\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [716], () => (__webpack_require__(202)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","r","e","t","f","n","Array","isArray","length","arguments","Controls","attributes","clientId","context","setAttributes","handleToggleCorrect","uuid","points","correct","resultsLabel","answer","quizType","handleAnswerChange","useCallback","value","handlePointsChange","p","Number","handleResultsLabelChange","_jsxs","InspectorControls","children","PanelBody","title","__","_jsx","TextareaControl","label","onChange","placeholder","BaseControl","help","Button","variant","onClick","NumberControl","min","ConditionalPanel","blockType","UUIDCopyToClipboard","Icon","style","color","PRCIcon","icon","CorrectToolbar","onToggle","controls","useMemo","isActive","BlockControls","Save","blockProps","useBlockProps","save","innerBlocksProps","useInnerBlocksProps","name","description","isDefault","scope","innerBlocks","metadata","bindings","content","source","blockAttributes","undefined","conditionalDisplay","supports","settings","edit","className","isSelected","insertBlocksAfter","__unstableLayoutClassNames","layoutClassNames","existingUuids","questionType","updateBlockAttributes","useDispatch","blockEditorStore","newCorrectState","getBlockParentsByBlockName","getClientIdsOfDescendants","getBlock","select","questionClientId","filter","descendantId","block","forEach","id","clsx","template","useEffect","Object","keys","includes","console","log","_Fragment","variations","deprecated","migrate","answerBinding","createBlock","isEligible","registerBlockBindingsSource","usesContext","getValues","setValues","dispatch","newValue","getSelectedBlockClientId","getBlockRootClientId","canUserEditValue","registerBlockVariation","ancestor","variationAttributes","registerBlockType","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","key","splice","o","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","globalThis","bind","push","__webpack_exports__"],"sourceRoot":""}
{"version":3,"file":"result-histogram/view.js","mappings":"iEAaA,MACMA,EAAYC,IACjB,MAAMC,EAAIC,OAAOF,GACjB,OAAOE,OAAOC,SAASF,GAAKA,EAAI,GAG3BG,EAAiBC,IACPC,MAAMC,QAAQF,GAAOA,EAAM,IAExCG,IAAKC,IAAC,CAAQC,EAAGX,EAASU,EAAEC,GAAIC,EAAGZ,EAASU,EAAEE,MAC9CC,OAAQH,GAAMP,OAAOC,SAASM,EAAEC,IAAMR,OAAOC,SAASM,EAAEE,IAGrDE,EAAaZ,IAAM,SAbVa,EAamBC,KAAKC,MAAMf,GAbVc,KAAKE,IAaY,IAbHF,KAAKG,IAaL,EAbcJ,OAAjDK,IAACL,IAeT,MAAEM,EAAK,QAAEC,GAAYC,EAAM,sBAAuB,CACvDF,MAAO,CACN,qBAAIG,GACH,OAAOxB,EAASqB,EAAMI,MACvB,EACA,UAAIC,GAAS,IAAAC,EACZ,MAAM,cAAEC,GAAkBC,IACpBC,EAAOzB,EAAcuB,GACrBG,EAAI/B,EAASqB,EAAMI,OACnBO,EAAQF,EAAKG,KAAMC,GAAMA,EAAEvB,IAAMoB,GACvC,OAAOjB,EAAkB,QAATa,EAACK,GAAOpB,SAAC,IAAAe,EAAAA,EAAI,EAC9B,EACA,cAAIQ,GACH,MAAM,cAAEP,GAAkBC,IACpBC,EAAOzB,EAAcuB,GACrBG,EAAI/B,EAASqB,EAAMI,OACnBW,EAAMN,EAAKO,OAAO,CAACC,EAAKJ,IAAOA,EAAEvB,EAAIoB,EAAIO,EAAMJ,EAAEtB,EAAI0B,EAAM,GACjE,OAAOxB,EAAUsB,EAClB,EACA,aAAIG,GACH,MAAM,cAAEX,GAAkBC,IACpBC,EAAOzB,EAAcuB,GACrBG,EAAI/B,EAASqB,EAAMI,OACnBW,EAAMN,EAAKO,OAAO,CAACC,EAAKJ,IAAOA,EAAEvB,EAAIoB,EAAIO,EAAMJ,EAAEtB,EAAI0B,EAAM,GACjE,OAAOxB,EAAUsB,EAClB,EACA,eAAII,GACH,MAAMC,EAAUZ,KACV,IAAEa,GAAQD,GACV,WAAEE,EAAU,OAAEC,EAAM,MAAEC,GAAUH,EACtC,MAAO,WAAWE,aAAkBC,kBAAsBF,IAC3D,EACA,iBAAIG,GACH,MAAM,cACLlB,EAAa,eACbmB,EAAiB,EAAC,SAClBC,EAAQ,mBACRC,EAAkB,SAClBC,GACGrB,IACEE,EAAI/B,EAASqB,EAAMI,OACnBK,EAAOzB,EAAcuB,GACrBuB,EAAOnC,KAAKG,IAAI,KAAMW,EAAKrB,IAAKyB,GAAMA,EAAEtB,IACxCwC,EAA8B9B,EAAQ+B,SAASJ,GAC/CK,EAAmBhC,EAAQ+B,SAASL,GAC1C,OAAOlB,EAAKrB,IAAKyB,IAChB,MAAMqB,EAAarB,EAAEtB,EAAIuC,EAAQ,IAC3BK,EAAgBtB,EAAEvB,IAAMoB,EACxB0B,EAAQvB,EAAEtB,EAAI,EAAI,MAAQ,GAAGI,KAAKC,MAAMiB,EAAEtB,MAC1C8C,EAAY,GAAGxB,EAAEvB,cAAcK,KAAKC,MAAMiB,EAAEtB,MAClD,MAAO,CACND,EAAGuB,EAAEvB,EACLgD,OAAQC,OAAO1B,EAAEvB,GACjBC,EAAGsB,EAAEtB,EACLgC,OAAQ,GAAGW,KACXZ,WACCa,GAAiBJ,EACdA,EACAE,GAAoB,OACxBE,gBACAC,QACAC,YACAV,WACAC,qBACAY,YAAa3B,EAAEtB,GAAKmC,EACpBF,MAAO,GAAGK,QAGb,GAED5B,QAAS,CACR+B,SAAWS,GAEW,iBAAVA,EACH,GAEM,yBAAyBC,KAAKD,GAC7BA,EAAQ,4BAA4BA,MAGrDE,UAAW,CAAC","sources":["webpack://@prc/quiz-builder/./src/result-histogram/view.js"],"sourcesContent":["/**\n * WordPress Dependencies\n */\nimport {\n\tstore,\n\tgetContext,\n\twithScope,\n\twithSyncEvent,\n} from '@wordpress/interactivity';\n\n/**\n * Quiz Results Histogram Interactivity\n */\nconst clamp = (value, min, max) => Math.min(max, Math.max(min, value));\nconst toNumber = (v) => {\n\tconst n = Number(v);\n\treturn Number.isFinite(n) ? n : 0;\n};\n\nconst normalizeBins = (raw) => {\n\tconst source = Array.isArray(raw) ? raw : [];\n\treturn source\n\t\t.map((d) => ({ x: toNumber(d.x), y: toNumber(d.y) }))\n\t\t.filter((d) => Number.isFinite(d.x) && Number.isFinite(d.y));\n};\n\nconst formatPct = (n) => `${clamp(Math.round(n), 0, 100)}%`;\n\nconst { state, actions } = store('prc-quiz/controller', {\n\tstate: {\n\t\tget answeredCorrectly() {\n\t\t\treturn toNumber(state.score);\n\t\t},\n\t\tget sameAs() {\n\t\t\tconst { histogramData } = getContext();\n\t\t\tconst bins = normalizeBins(histogramData);\n\t\t\tconst s = toNumber(state.score);\n\t\t\tconst found = bins.find((b) => b.x === s);\n\t\t\treturn formatPct(found?.y ?? 0);\n\t\t},\n\t\tget betterThan() {\n\t\t\tconst { histogramData } = getContext();\n\t\t\tconst bins = normalizeBins(histogramData);\n\t\t\tconst s = toNumber(state.score);\n\t\t\tconst sum = bins.reduce((acc, b) => (b.x < s ? acc + b.y : acc), 0);\n\t\t\treturn formatPct(sum);\n\t\t},\n\t\tget lowerThan() {\n\t\t\tconst { histogramData } = getContext();\n\t\t\tconst bins = normalizeBins(histogramData);\n\t\t\tconst s = toNumber(state.score);\n\t\t\tconst sum = bins.reduce((acc, b) => (b.x > s ? acc + b.y : acc), 0);\n\t\t\treturn formatPct(sum);\n\t\t},\n\t\tget getBarStyle() {\n\t\t\tconst context = getContext();\n\t\t\tconst { bar } = context;\n\t\t\tconst { background, height, width } = bar;\n\t\t\treturn `height: ${height}; width: ${width}; background: ${background};`;\n\t\t},\n\t\tget histogramBars() {\n\t\t\tconst {\n\t\t\t\thistogramData,\n\t\t\t\tbarLabelCutoff = 0,\n\t\t\t\tbarColor,\n\t\t\t\tisHighlightedColor,\n\t\t\t\tbarWidth,\n\t\t\t} = getContext();\n\t\t\tconst s = toNumber(state.score);\n\t\t\tconst bins = normalizeBins(histogramData);\n\t\t\tconst maxY = Math.max(1, ...bins.map((b) => b.y));\n\t\t\tconst highlightedBarColorResolved = actions.getColor(isHighlightedColor);\n\t\t\tconst barColorResolved = actions.getColor(barColor);\n\t\t\treturn bins.map((b) => {\n\t\t\t\tconst heightPct = (b.y / maxY) * 100;\n\t\t\t\tconst isHighlighted = b.x === s;\n\t\t\t\tconst label = b.y < 1 ? '<1%' : `${Math.round(b.y)}%`;\n\t\t\t\tconst ariaLabel = `${b.x} correct: ${Math.round(b.y)}%`;\n\t\t\t\treturn {\n\t\t\t\t\tx: b.x,\n\t\t\t\t\txLabel: String(b.x),\n\t\t\t\t\ty: b.y,\n\t\t\t\t\theight: `${heightPct}%`,\n\t\t\t\t\tbackground:\n\t\t\t\t\t\tisHighlighted && highlightedBarColorResolved\n\t\t\t\t\t\t\t? highlightedBarColorResolved\n\t\t\t\t\t\t\t: barColorResolved || '#000',\n\t\t\t\t\tisHighlighted,\n\t\t\t\t\tlabel,\n\t\t\t\t\tariaLabel,\n\t\t\t\t\tbarColor,\n\t\t\t\t\tisHighlightedColor,\n\t\t\t\t\tshowOutside: b.y <= barLabelCutoff,\n\t\t\t\t\twidth: `${barWidth}px`,\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t},\n\tactions: {\n\t\tgetColor: (color) => {\n\t\t\t// determine if theres a hex code at the begining or if this is a string, if its a hex code let it through, if its a string wrap it in var(--)\n\t\t\tif (typeof color !== 'string') {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tconst isHex = /^#([0-9A-F]{3}){1,2}$/i.test(color);\n\t\t\treturn isHex ? color : `var(--wp--preset--color--${color})`;\n\t\t}\n\t},\n\tcallbacks: {},\n});\n"],"names":["toNumber","v","n","Number","isFinite","normalizeBins","raw","Array","isArray","map","d","x","y","filter","formatPct","value","Math","round","min","max","clamp","state","actions","store","answeredCorrectly","score","sameAs","_found$y","histogramData","getContext","bins","s","found","find","b","betterThan","sum","reduce","acc","lowerThan","getBarStyle","context","bar","background","height","width","histogramBars","barLabelCutoff","barColor","isHighlightedColor","barWidth","maxY","highlightedBarColorResolved","getColor","barColorResolved","heightPct","isHighlighted","label","ariaLabel","xLabel","String","showOutside","color","test","callbacks"],"sourceRoot":""}
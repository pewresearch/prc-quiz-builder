{"version":3,"file":"controller/index.js","mappings":"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","sources":["webpack://@prc/quiz-builder/webpack/runtime/chunk loaded","webpack://@prc/quiz-builder/external window [\"wp\",\"blocks\"]","webpack://@prc/quiz-builder/../../node_modules/clsx/dist/clsx.m.js","webpack://@prc/quiz-builder/external window [\"wp\",\"i18n\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"element\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"blockEditor\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"data\"]","webpack://@prc/quiz-builder/external window \"prcCopilot\"","webpack://@prc/quiz-builder/external window [\"wp\",\"components\"]","webpack://@prc/quiz-builder/external window [\"wp\",\"apiFetch\"]","webpack://@prc/quiz-builder/external window \"prcQuizSharedComponents\"","webpack://@prc/quiz-builder/external window \"ReactJSXRuntime\"","webpack://@prc/quiz-builder/external window [\"wp\",\"notices\"]","webpack://@prc/quiz-builder/external window \"prcIcons\"","webpack://@prc/quiz-builder/./src/controller/icon.js","webpack://@prc/quiz-builder/./src/controller/controls.js","webpack://@prc/quiz-builder/./src/utils/ai-generators.js","webpack://@prc/quiz-builder/./src/controller/edit.js","webpack://@prc/quiz-builder/./src/controller/variations.js","webpack://@prc/quiz-builder/./src/controller/index.js","webpack://@prc/quiz-builder/./src/controller/save.js","webpack://@prc/quiz-builder/./src/controller/register-group-form.js","webpack://@prc/quiz-builder/./src/group-results/icon.js","webpack://@prc/quiz-builder/webpack/bootstrap","webpack://@prc/quiz-builder/webpack/runtime/compat get default export","webpack://@prc/quiz-builder/webpack/runtime/define property getters","webpack://@prc/quiz-builder/webpack/runtime/hasOwnProperty shorthand","webpack://@prc/quiz-builder/webpack/runtime/jsonp chunk loading","webpack://@prc/quiz-builder/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcCopilot\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcQuizSharedComponents\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","/**\n * External Dependencies\n */\nimport { Icon } from '@prc/icons';\n\nexport default function ({ variant = 'quiz' }) {\n\tif ('freeform' === variant) {\n\t\treturn <Icon icon=\"block-question\" library=\"solid\" />;\n\t}\n\treturn <Icon icon=\"block-question\" library=\"light\" />;\n}\n","/**\n * External Dependencies\n */\nimport { addToCopilotToolbar } from '@prc/copilot';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect, useState } from '@wordpress/element';\nimport {\n\tInspectorControls,\n\tInspectorAdvancedControls,\n} from '@wordpress/block-editor';\nimport {\n\tBaseControl,\n\tPanelBody,\n\tToggleControl,\n\tSelectControl,\n\tTextControl,\n\t__experimentalNumberControl as NumberControl,\n\tButton,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal Dependencies\n */\n// eslint-disable-next-line import/no-relative-packages\nimport { JSONSortableList } from '@prc/quiz-components';\nimport { aiGenerateKnowledgeQuiz } from '../utils/ai-generators';\nimport icon from './icon';\n\nfunction Controls({ attributes, setAttributes, clientId }) {\n\tconst {\n\t\tgroupsEnabled,\n\t\tdemoBreakLabels,\n\t\tthreshold,\n\t\tdisplayType,\n\t\tallowSubmissions,\n\t} = attributes;\n\n\tconst { postId } = useSelect((select) => ({\n\t\tpostId: select('core/editor').getCurrentPostId(),\n\t}));\n\n\tconst [isPurgingArchetypes, setIsPurgingArchetypes] = useState(false);\n\n\t// Register the copilot toolbar when the component mounts.\n\tuseEffect(() => {\n\t\taddToCopilotToolbar({\n\t\t\ttitle: 'Generate Quiz',\n\t\t\ticon,\n\t\t\ttoolType: 'request',\n\t\t\ttool: 'generate-knowledge-quiz',\n\t\t\tonRequest: async (\n\t\t\t\trequest,\n\t\t\t\tinstructions,\n\t\t\t\ttool,\n\t\t\t\tclientId,\n\t\t\t\tnotices\n\t\t\t) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { data, metadata } = await aiGenerateKnowledgeQuiz(\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tinstructions\n\t\t\t\t\t);\n\t\t\t\t\tconsole.log('...data...', data);\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\tnotices.createErrorNotice(\n\t\t\t\t\t\t\t'No data could be generated for your request.'\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (data.length > 1) {\n\t\t\t\t\t\tnotices.createSuccessNotice(\n\t\t\t\t\t\t\t'Quiz generated. Please review results.'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log('data...', clientId, data, metadata);\n\n\t\t\t\t\t// const tableData = data.data;\n\t\t\t\t\t// const textData = data.text;\n\n\t\t\t\t\t// const newAttributes = {\n\t\t\t\t\t// \t...tableData,\n\t\t\t\t\t// \tcaption: textData?.before,\n\t\t\t\t\t// \tsourceNote: textData?.after,\n\t\t\t\t\t// };\n\n\t\t\t\t\t// const currentAttributes = select(blockEditorStore).getBlockAttributes(clientId);\n\n\t\t\t\t\t// const payload = {\n\t\t\t\t\t// \t...newAttributes,\n\t\t\t\t\t// \tmetadata: {\n\t\t\t\t\t// \t\t...currentAttributes.metadata,\n\t\t\t\t\t// \t\t_copilot: [\n\t\t\t\t\t// \t\t\t...((currentAttributes.metadata && currentAttributes.metadata._copilot) ?? []),\n\t\t\t\t\t// \t\t\t{\n\t\t\t\t\t// \t\t\t\tfeature: tool,\n\t\t\t\t\t// \t\t\t\t...metadata,\n\t\t\t\t\t// \t\t\t},\n\t\t\t\t\t// \t\t],\n\t\t\t\t\t// \t},\n\t\t\t\t\t// };\n\n\t\t\t\t\t// updateBlockAttributes(clientId, payload);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tnotices.createErrorNotice(error?.message || String(error));\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}, [clientId]);\n\n\tconst purgeArchetypes = () => {\n\t\tconsole.log('purgeArchetypes', postId);\n\t\tsetIsPurgingArchetypes(true);\n\t\tapiFetch({\n\t\t\tpath: `/prc-api/v3/quiz/purge-archetypes?quizId=${postId}`,\n\t\t\tmethod: 'POST',\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log('response', response);\n\t\t\t\tsetIsPurgingArchetypes(false);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('error', error);\n\t\t\t\tsetIsPurgingArchetypes(false);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorAdvancedControls>\n\t\t\t\t<BaseControl\n\t\t\t\t\tlabel=\"Purge Quiz Archetypes\"\n\t\t\t\t\thelp=\"Purge the quiz archetypes. This will remove all the archetypes for the quiz.\"\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tisDestructive={true}\n\t\t\t\t\t\tisBusy={isPurgingArchetypes}\n\t\t\t\t\t\ttext={\n\t\t\t\t\t\t\tisPurgingArchetypes\n\t\t\t\t\t\t\t\t? 'Purging...'\n\t\t\t\t\t\t\t\t: 'Purge Archetypes'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tpurgeArchetypes();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</BaseControl>\n\t\t\t</InspectorAdvancedControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Quiz Settings')}>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Display Type\"\n\t\t\t\t\t\thelp=\"Select the display type for the quiz. Paged will display the quiz in pages, scrollable will display the quiz as a single page with a scrollable container.\"\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{ label: 'Paged', value: 'paged' },\n\t\t\t\t\t\t\t{ label: 'Scrollable', value: 'scrollable' },\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tvalue={displayType}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetAttributes({ displayType: value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Allow Submissions\"\n\t\t\t\t\t\thelp=\"Allow users to submit the quiz. If disabled, users will not be able to submit the quiz and will only be able to view the results. This means the results will not be shareable with the public.\"\n\t\t\t\t\t\tchecked={allowSubmissions}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\tallowSubmissions: !allowSubmissions,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberControl\n\t\t\t\t\t\tlabel=\"Answer Threshold\"\n\t\t\t\t\t\thelp=\"Number of selected answers needed to complete the quiz.\"\n\t\t\t\t\t\tvalue={threshold}\n\t\t\t\t\t\tisShiftStepEnabled={true}\n\t\t\t\t\t\tisDragEnabled={true}\n\t\t\t\t\t\tonChange={(t) => {\n\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\tthreshold: Math.round(parseFloat(t) || 0),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={15}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={__('Community Groups')} initialOpen={false}>\n\t\t\t\t\t<BaseControl\n\t\t\t\t\t\tid=\"community-groups\"\n\t\t\t\t\t\tlabel={__('Community Groups')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={groupsEnabled ? 'Enabled' : 'Disabled'}\n\t\t\t\t\t\t\tchecked={groupsEnabled}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tgroupsEnabled: !groupsEnabled,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{true === groupsEnabled && (\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel=\"Mailchimp List ID\"\n\t\t\t\t\t\t\t\thelp=\"Enter a Mailchimp list id that group owners will be subscribed to for future communication about this quiz.\"\n\t\t\t\t\t\t\t\tvalue={attributes.mailchimpListId}\n\t\t\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\tmailchimpListId: value,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</BaseControl>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={__('Demographic Breakdown')}\n\t\t\t\t\tinitialOpen={false}\n\t\t\t\t>\n\t\t\t\t\t<JSONSortableList\n\t\t\t\t\t\tlabel={__('Demographic Breakdown Labels', 'prc-quiz')}\n\t\t\t\t\t\thelp={__(\n\t\t\t\t\t\t\t'Set the labels/categories for demographic breakdowns. When you add values here you will be prompted per question block to add values to each category. These will appear in the results table block.',\n\t\t\t\t\t\t\t'prc-quiz'\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tvalues={\n\t\t\t\t\t\t\tundefined === demoBreakLabels\n\t\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t\t: JSON.parse(demoBreakLabels)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabels=\"Demographic Break\"\n\t\t\t\t\t\tonChange={(values) => {\n\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\tdemoBreakLabels: JSON.stringify(values),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t</>\n\t);\n}\n\nexport default Controls;\n","/**\n * External Dependencies\n */\nimport { processToolRequest, RequestModal } from '@prc/copilot';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Generate a knowledge quiz from a request.\n *\n * @param {string} promptForQuiz          - The prompt for the quiz to generate.\n * @param {string} additionalInstructions - Additional instructions for the AI.\n * @return {Promise<string|null>} The quiz block markup for direct insertion.\n */\nexport async function aiGenerateKnowledgeQuiz(\n\tpromptForQuiz = '',\n\tadditionalInstructions = ''\n) {\n\ttry {\n\t\tconst prompt = `${promptForQuiz}${\n\t\t\tadditionalInstructions\n\t\t\t\t? `\\n\\nAdditional instructions: ${additionalInstructions}`\n\t\t\t\t: ''\n\t\t}`;\n\n\t\tconst response = await processToolRequest(\n\t\t\tprompt,\n\t\t\t'generate-knowledge-quiz'\n\t\t);\n\n\t\tif (\n\t\t\t!response ||\n\t\t\t!response.candidates ||\n\t\t\tresponse.candidates.length === 0\n\t\t) {\n\t\t\tthrow new Error('No quiz content generated', response);\n\t\t}\n\n\t\t// Return the first candidate directly (following table pattern)\n\t\treturn response.candidates[0];\n\t} catch (error) {\n\t\tconsole.error('Error generating quiz:', error);\n\t\tthrow error;\n\t}\n}\n\n/**\n * Generate Quiz Button component for quiz builder toolbar.\n *\n * @param {Object} props Component props.\n * @param {Function} props.setAttributes Function to set block attributes.\n * @param {string} props.clientId The block client ID.\n * @return {JSX.Element} The generate quiz button component.\n */\nexport function GenerateQuizButton({ setAttributes, clientId }) {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst [isGenerating, setIsGenerating] = useState(false);\n\n\tconst { createSuccessNotice, createErrorNotice } =\n\t\tuseDispatch(noticesStore);\n\n\tconst handleRequest = async (\n\t\trequest,\n\t\tinstructions,\n\t\ttool,\n\t\tblockClientId,\n\t\tnotices\n\t) => {\n\t\tsetIsGenerating(true);\n\n\t\ttry {\n\t\t\tconst generatedMarkup = await aiGenerateKnowledgeQuiz(\n\t\t\t\trequest,\n\t\t\t\tinstructions\n\t\t\t);\n\n\t\t\tif (!generatedMarkup) {\n\t\t\t\tthrow new Error('No quiz content was generated');\n\t\t\t}\n\n\t\t\t// Parse the generated markup and extract quiz content\n\t\t\t// This would need to be implemented based on how the quiz block\n\t\t\t// expects to receive its data structure\n\t\t\tconst quizContent = parseQuizMarkup(generatedMarkup);\n\n\t\t\t// Set the generated content directly into the block\n\t\t\tsetAttributes(quizContent);\n\n\t\t\tnotices?.createSuccessNotice({\n\t\t\t\tmessage: __('Quiz generated successfully!', 'prc-quiz-builder'),\n\t\t\t\ttype: 'snackbar',\n\t\t\t});\n\n\t\t\tsetIsModalOpen(false);\n\t\t} catch (error) {\n\t\t\tconsole.error('Quiz generation error:', error);\n\t\t\tnotices?.createErrorNotice({\n\t\t\t\tmessage:\n\t\t\t\t\terror.message ||\n\t\t\t\t\t__('Failed to generate quiz', 'prc-quiz-builder'),\n\t\t\t\ttype: 'snackbar',\n\t\t\t});\n\t\t} finally {\n\t\t\tsetIsGenerating(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tonClick={() => setIsModalOpen(true)}\n\t\t\t\tdisabled={isGenerating}\n\t\t\t\tisBusy={isGenerating}\n\t\t\t>\n\t\t\t\t{isGenerating\n\t\t\t\t\t? __('Generating...', 'prc-quiz-builder')\n\t\t\t\t\t: __('Generate Quiz with ✨ AI', 'prc-quiz-builder')}\n\t\t\t</Button>\n\n\t\t\t<RequestModal\n\t\t\t\ttitle={__('Generate Knowledge Quiz', 'prc-quiz-builder')}\n\t\t\t\tdescription={__(\n\t\t\t\t\t'Describe the quiz you want to create. For example: \"Create a 5-question quiz about climate change\" or \"Generate a quiz about U.S. history with 8 questions\".',\n\t\t\t\t\t'prc-quiz-builder'\n\t\t\t\t)}\n\t\t\t\ttool=\"generate-knowledge-quiz\"\n\t\t\t\tisOpen={isModalOpen}\n\t\t\t\tallowAdditionalInstructions={true}\n\t\t\t\tonClose={() => setIsModalOpen(false)}\n\t\t\t\tclientId={clientId}\n\t\t\t\tonRequest={handleRequest}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\n/**\n * Parse the generated quiz markup and convert it to quiz block attributes.\n *\n * @param {string} markup The generated HTML markup from the AI.\n * @return {Object} The quiz block attributes.\n */\nfunction parseQuizMarkup(markup) {\n\t// TODO: This function needs to be implemented based on how the quiz builder\n\t// block expects to receive its attributes. This would involve:\n\t// 1. Parsing the HTML markup\n\t// 2. Extracting quiz pages, questions, and answers\n\t// 3. Converting to the expected block attributes structure\n\t// 4. Handling UUIDs and other metadata\n\n\tconsole.log('Generated markup:', markup);\n\n\t// For now, return a basic structure - this needs to be implemented\n\t// based on the actual quiz block attribute structure\n\treturn {\n\t\t// This should match the quiz block's expected attribute structure\n\t\t// Based on the examples, it likely includes pages, questions, etc.\n\t};\n}\n","/**\n * External Dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo } from '@wordpress/element';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tBlockContextProvider,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal Dependencies\n */\nimport Controls from './controls';\nimport { GenerateQuizButton } from '../utils/ai-generators';\n\nconst TEMPLATE = [\n\t[\n\t\t'prc-quiz/pages',\n\t\t{},\n\t\t[\n\t\t\t[\n\t\t\t\t'prc-quiz/page',\n\t\t\t\t{\n\t\t\t\t\ttitle: __('Introduction', 'prc-quiz'),\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\t['core/post-title', {}],\n\t\t\t\t\t[\n\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t{ placeholder: 'Introduction page content here...' },\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t[\n\t\t\t\t'prc-quiz/page',\n\t\t\t\t{\n\t\t\t\t\ttitle: __('Question 1 of X', 'prc-quiz'),\n\t\t\t\t},\n\t\t\t],\n\t\t],\n\t],\n\t['prc-quiz/results', {}, [['prc-quiz/result-score']]],\n];\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {string}   props.className     Class name.\n * @param {Object}   props.context       Context.\n * @param {string}   props.clientId      Block client ID.\n * @param {boolean}  props.isSelected    Whether the block is selected.\n * @param {Object}   props.attributes    Available block attributes.\n * @param {Function} props.setAttributes Function that updates individual attributes.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({\n\tattributes,\n\tsetAttributes,\n\tclassName,\n\tcontext,\n\tclientId,\n\tisSelected,\n}) {\n\tconst { allowedBlocks, displayType } = attributes;\n\n\tconst blockProps = useBlockProps({\n\t\tclassName: clsx(className, {\n\t\t\t'is-scrollable': displayType === 'scrollable',\n\t\t\t'is-paged': displayType === 'paged',\n\t\t}),\n\t});\n\n\tconst innerBlocksProps = useInnerBlocksProps(blockProps, {\n\t\tallowedBlocks,\n\t\torientation: 'vertical',\n\t\ttemplate: TEMPLATE,\n\t});\n\n\t/**\n\t * Recursively get all UUIDs from question, answer, and page blocks inside this controller block\n\t * We then pass these UUID's via Block Context so that answer, question, and page blocks\n\t * can access them and utilize them when copying and pasting blocks in order to generate new unique id's for\n\t * the new blocks.\n\t */\n\tconst existingUuids = useSelect(\n\t\t(select) => {\n\t\t\tconst { getClientIdsOfDescendants, getBlock } =\n\t\t\t\tselect('core/block-editor');\n\n\t\t\t// Get all descendant client IDs\n\t\t\tconst descendantClientIds = getClientIdsOfDescendants(clientId);\n\n\t\t\t// Get all blocks and filter for the ones we want\n\t\t\tconst relevantBlocks = descendantClientIds\n\t\t\t\t.map((id) => ({ block: getBlock(id), clientId: id }))\n\t\t\t\t.filter(\n\t\t\t\t\t({ block }) =>\n\t\t\t\t\t\tblock?.name === 'prc-quiz/page' ||\n\t\t\t\t\t\tblock?.name === 'prc-quiz/question' ||\n\t\t\t\t\t\tblock?.name === 'prc-quiz/answer'\n\t\t\t\t);\n\n\t\t\t// Create object with uuid as key and clientId as value, filtering out blocks without uuids\n\t\t\treturn relevantBlocks.reduce((acc, { block, clientId }) => {\n\t\t\t\tconst uuid = block.attributes.uuid;\n\t\t\t\tif (uuid) {\n\t\t\t\t\tacc[uuid] = clientId;\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\t\t},\n\t\t[clientId]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Controls\n\t\t\t\tattributes={attributes}\n\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\tclientId={clientId}\n\t\t\t/>\n\t\t\t<div {...innerBlocksProps}>\n\t\t\t\t<BlockContextProvider\n\t\t\t\t\tvalue={{\n\t\t\t\t\t\t'prc-quiz/uuids': existingUuids,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div {...innerBlocksProps} />\n\t\t\t\t</BlockContextProvider>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport Icon from './icon';\n\nexport default [\n\t{\n\t\tname: 'quiz',\n\t\tisDefault: true,\n\t\ttitle: __('Knowledge Quiz'),\n\t\tdescription: __(\n\t\t\t`A knowledge quiz includes a series of questions with single, multiple-choice, or thermometer-type answers. Users receive scores based on their responses, which are either correct or incorrect. Correct answers contribute points to the total score at the end of the quiz, incorrect answers do not.`\n\t\t),\n\t\tattributes: { type: 'quiz' },\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes) => 'quiz' === blockAttributes.type,\n\t},\n\t{\n\t\tname: 'freeform',\n\t\ttitle: __('Freeform Quiz'),\n\t\tdescription: __(\n\t\t\t`A freeform quiz presents users with a series of questions, including single-choice, multiple-choice, and thermometer-type answers. Users responses are scored based on point values rather than correct or incorrect answers. The score can generate various result configurations or custom result pages with tailored score calculations, such as in a political freeform quiz.`\n\t\t),\n\t\ticon: <Icon variant=\"freeform\" />,\n\t\tattributes: {\n\t\t\ttype: 'freeform',\n\t\t},\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes) => 'freeform' === blockAttributes.type,\n\t},\n];\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor. All other files\n * get applied to the editor only.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\nimport './editor.scss';\nimport edit from './edit';\nimport save from './save';\nimport icon from './icon';\nimport variations from './variations';\nimport registerGroupForm from './register-group-form';\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\ticon,\n\tedit,\n\tsave,\n\tvariations,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\nregisterGroupForm();\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\n\nexport default function Save({ attributes }) {\n\tconst blockProps = useBlockProps.save();\n\tconst innerBlocksProps = useInnerBlocksProps.save(blockProps);\n\n\treturn <div {...innerBlocksProps} />;\n}\n","/**\n * WordPress Dependencies\n */\nimport { dispatch } from '@wordpress/data';\nimport { registerBlockVariation } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport icon from '../group-results/icon';\n\n/**\n * Register the forms with prc-block/form provider.\n */\nexport default function registerGroupForm() {\n\tconst newForms = [\n\t\t{\n\t\t\tlabel: 'Create Group',\n\t\t\tdescription: 'Create a group quiz',\n\t\t\tnamespace: 'prc-quiz/controller',\n\t\t\taction: 'createGroup',\n\t\t\tmethod: 'api',\n\t\t\ttemplate: [\n\t\t\t\t[\n\t\t\t\t\t'prc-block/form-input-text',\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tlabel: 'Group Name',\n\t\t\t\t\t\tplaceholder: 'Enter your group name',\n\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\tname: 'groupName',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-block/form-submit',\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Create',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'prc-block/form-message',\n\t\t\t\t\t{},\n\t\t\t\t\t[['core/paragraph', { content: 'Group Created!' }]],\n\t\t\t\t],\n\t\t\t],\n\t\t},\n\t];\n\tnewForms.forEach((form) => {\n\t\tdispatch('prc-block-library/forms').registerForm(form);\n\t});\n\n\tregisterBlockVariation('prc-block/dialog', {\n\t\ticon,\n\t\ttitle: 'Group Quiz Form',\n\t\tdescription: 'Create a group quiz form',\n\t\tattributes: {},\n\t\tinnerBlocks: [\n\t\t\t['prc-block/dialog-trigger', {}, [['core/button', {}, []]]],\n\t\t\t[\n\t\t\t\t'prc-block/dialog-element',\n\t\t\t\t{\n\t\t\t\t\tbackdropColor: 'ui-gray-dark',\n\t\t\t\t\tborderColor: 'ui-gray-very-dark',\n\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\tfontFamily: 'sans-serif',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tspacing: {\n\t\t\t\t\t\t\tpadding: {\n\t\t\t\t\t\t\t\ttop: 'var:preset|spacing|30',\n\t\t\t\t\t\t\t\tbottom: 'var:preset|spacing|30',\n\t\t\t\t\t\t\t\tleft: 'var:preset|spacing|30',\n\t\t\t\t\t\t\t\tright: 'var:preset|spacing|30',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshadow: 'var:preset|shadow|deep',\n\t\t\t\t\t\tborder: {\n\t\t\t\t\t\t\tradius: '5px',\n\t\t\t\t\t\t\twidth: '1px',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[\n\t\t\t\t\t[\n\t\t\t\t\t\t'core/group',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tspacing: {\n\t\t\t\t\t\t\t\t\tblockGap: 'var:preset|spacing|30',\n\t\t\t\t\t\t\t\t\tpadding: {\n\t\t\t\t\t\t\t\t\t\ttop: 'var:preset|spacing|30',\n\t\t\t\t\t\t\t\t\t\tbottom: 'var:preset|spacing|30',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmargin: {\n\t\t\t\t\t\t\t\t\t\tbottom: 'var:preset|spacing|50',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\ttype: 'flex',\n\t\t\t\t\t\t\t\torientation: 'vertical',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'core/paragraph',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\ttypography: {\n\t\t\t\t\t\t\t\t\t\t\tlineHeight: '1',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'core/post-title',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\tspacing: {\n\t\t\t\t\t\t\t\t\t\t\tpadding: {\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '0',\n\t\t\t\t\t\t\t\t\t\t\t\tbottom: '0',\n\t\t\t\t\t\t\t\t\t\t\t\tleft: '0',\n\t\t\t\t\t\t\t\t\t\t\t\tright: '0',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tmargin: {\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '0',\n\t\t\t\t\t\t\t\t\t\t\t\tbottom: '0',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\ttypography: {\n\t\t\t\t\t\t\t\t\t\t\tlineHeight: '1',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfontSize: 'medium',\n\t\t\t\t\t\t\t\t\tfontFamily: 'sans-serif',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'prc-user-accounts/content-gate',\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'core/group',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t\ttype: 'default',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t'prc-block/form',\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tnamespace: 'prc-quiz/controller',\n\t\t\t\t\t\t\t\t\t\t\taction: 'createGroup',\n\t\t\t\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'constrained',\n\t\t\t\t\t\t\t\t\t\t\t\torientation: 'vertical',\n\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: 'center',\n\t\t\t\t\t\t\t\t\t\t\t\tallowOrientation: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcontentSize: '420px',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'left',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tinteractiveNamespace:\n\t\t\t\t\t\t\t\t\t\t\t\t'prc-quiz/controller',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t'prc-block/form-input-text',\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\torientation:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'horizontal',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'center',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tallowOrientation: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: 'groupName',\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t'prc-block/form-submit',\n\t\t\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'core/button',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttagName: 'button',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'prc-block/form-captcha',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t'prc-block/form-message',\n\t\t\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t\t\t[['core/paragraph', {}, []]],\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t],\n\t});\n\n\t// TODO: Register a variation of the dialog block that includes a group sign up form.\n}\n","/**\n * WordPress Dependencies\n */\nimport { Icon as PRCIcon } from '@prc/icons';\n\nexport default function Icon() {\n\treturn <PRCIcon icon=\"users-viewfinder\" />;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t938: 0,\n\t262: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunk_prc_quiz_builder\"] = globalThis[\"webpackChunk_prc_quiz_builder\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [262], () => (__webpack_require__(14)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","r","e","t","f","n","Array","isArray","length","arguments","variant","_jsx","Icon","icon","library","attributes","setAttributes","clientId","groupsEnabled","demoBreakLabels","threshold","displayType","allowSubmissions","postId","useSelect","select","getCurrentPostId","isPurgingArchetypes","setIsPurgingArchetypes","useState","useEffect","addToCopilotToolbar","title","toolType","tool","onRequest","async","request","instructions","notices","data","metadata","promptForQuiz","additionalInstructions","prompt","response","processToolRequest","candidates","Error","error","console","aiGenerateKnowledgeQuiz","log","createErrorNotice","createSuccessNotice","message","String","_jsxs","_Fragment","children","InspectorAdvancedControls","BaseControl","label","help","Button","isDestructive","isBusy","text","onClick","apiFetch","path","method","then","catch","InspectorControls","PanelBody","__","SelectControl","options","value","onChange","ToggleControl","checked","NumberControl","isShiftStepEnabled","isDragEnabled","Math","round","parseFloat","min","max","type","initialOpen","id","TextControl","mailchimpListId","JSONSortableList","values","undefined","JSON","parse","labels","stringify","TEMPLATE","placeholder","name","isDefault","description","scope","isActive","blockAttributes","settings","edit","className","context","isSelected","allowedBlocks","blockProps","useBlockProps","clsx","innerBlocksProps","useInnerBlocksProps","orientation","template","existingUuids","getClientIdsOfDescendants","getBlock","map","block","filter","reduce","acc","uuid","Controls","BlockContextProvider","save","variations","registerBlockType","namespace","action","content","forEach","form","dispatch","registerForm","registerBlockVariation","PRCIcon","innerBlocks","backdropColor","borderColor","backgroundColor","fontFamily","style","spacing","padding","top","bottom","left","right","shadow","border","radius","width","blockGap","margin","layout","typography","lineHeight","fontSize","verticalAlignment","allowOrientation","contentSize","justifyContent","interactiveNamespace","required","tagName","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","globalThis","bind","push","__webpack_exports__"],"sourceRoot":""}
{"version":3,"file":"view.js","mappings":"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","sources":["webpack://@prc/quiz-builder/../../node_modules/md5/md5.js","webpack://@prc/quiz-builder/../../node_modules/crypt/crypt.js","webpack://@prc/quiz-builder/external import \"@wordpress/interactivity-router\"","webpack://@prc/quiz-builder/../../node_modules/is-buffer/index.js","webpack://@prc/quiz-builder/../../node_modules/charenc/charenc.js","webpack://@prc/quiz-builder/webpack/bootstrap","webpack://@prc/quiz-builder/webpack/runtime/compat get default export","webpack://@prc/quiz-builder/webpack/runtime/define property getters","webpack://@prc/quiz-builder/webpack/runtime/hasOwnProperty shorthand","webpack://@prc/quiz-builder/external module \"@wordpress/interactivity\"","webpack://@prc/quiz-builder/./src/controller/scoring.js","webpack://@prc/quiz-builder/./src/controller/view.js"],"sourcesContent":["(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","module.exports = import(\"@wordpress/interactivity-router\");;","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store), [\"withScope\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.withScope), [\"withSyncEvent\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.withSyncEvent) });","/**\n * External Dependencies\n */\nimport md5 from 'md5';\n\n/**\n * WordPress Dependencies\n */\nimport { getContext } from '@wordpress/interactivity';\n\n/**\n * Get the correct answers from the flattened answers.\n * @param {Object} answers - All possible answers for the quiz.\n * @returns {Array} The correct answers.\n */\nexport function getCorrectAnswers(answers) {\n\treturn Object.values(answers).filter((answer) => answer.correct);\n}\n\n/**\n * Get the incorrect answers from the flattened answers.\n * @param {Object} answers - All possible answers for the quiz.\n * @returns {Array} The incorrect answers.\n */\nexport function getIncorrectAnswers(answers) {\n\treturn Object.values(answers).filter((answer) => !answer.correct);\n}\n\n/**\n * Tally the user's points based on the user's submission and the flattened answers.\n * @param {Array} userSubmission - The user's submission.\n * @param {Object} answers - All possible answers for the quiz.\n * @returns {number} The user's points.\n */\nexport function tallyUserPoints(userSubmission, answers) {\n\treturn userSubmission.reduce((acc, answerUuid) => {\n\t\tconst answer = answers[answerUuid];\n\t\treturn acc + answer.points;\n\t}, 0);\n}\n\n/**\n * Construct the points matrix for each question based on the user's submission and the flattened answers. Returns an object with the question_uuid as the key and the points as the value.\n * @param {Object} quizData - The quiz data, which includes the questions object.\n * @param {Array} userSubmission - The user's submission.\n * @returns {Object} The points for each question.\n */\nexport function constructQuestionPointsMatrix(questions, userSubmission) {\n\tconst questionPoints = {};\n\tObject.values(questions).forEach((question) => {\n\t\tconst questionUuid = question.uuid;\n\t\tconst internalId = question.internalId;\n\t\t// If a question has an internalId we'll prioritize that over the questionUuid.\n\t\t// This means in the case of the Political Typology a question may have an internalId of `govsize3`.\n\t\tconst id = internalId || questionUuid;\n\t\tconst answers = Object.values(question.answers);\n\t\t// Find the answer that the user selected.\n\t\tconst userMatchingAnswer = answers.find((answer) =>\n\t\t\tuserSubmission.includes(answer.uuid)\n\t\t);\n\t\t// If the user selected select an answer for this question award them the given points; otherwise award 0 points.\n\t\tconst pointsAwardedForGivenAnswer = userMatchingAnswer?.points || 0;\n\t\tquestionPoints[id] = pointsAwardedForGivenAnswer;\n\t});\n\treturn questionPoints;\n}\n\n/**\n * Construct the answer points matrix for each answer based on the user's submission and the flattened answers. Returns an object with the answer_uuid as the key and the points as the value.\n * @param {Object} answers - All possible answers for the quiz.\n * @param {Array} userSubmission - The user's submission.\n * @returns {Object} The points for each answer given.\n */\nexport function constructAnswerPointsMatrix(answers, userSubmission) {\n\tconst answerPoints = {};\n\tuserSubmission.forEach((answerUuid) => {\n\t\tconst answer = answers[answerUuid];\n\t\tif (!answer) {\n\t\t\treturn;\n\t\t}\n\t\tanswerPoints[answerUuid] = answer.points;\n\t});\n\treturn answerPoints;\n}\n\nexport default function scoreQuiz(userSubmission, answers, questions) {\n\tif (!answers || !questions) {\n\t\treturn null;\n\t}\n\n\t// We need to generate a md5 hash of the userSubmission array.\n\tconst userSubmissionHash = md5(userSubmission.join(','));\n\n\t// Construct the score.\n\tconst SCORE = tallyUserPoints(userSubmission, answers);\n\n\t// Construct question > points matrix.\n\t// Mostly this is used for custom scoring by typology-like quizzes.\n\tconst questionPointsMatrix = constructQuestionPointsMatrix(\n\t\tquestions,\n\t\tuserSubmission\n\t);\n\n\t// Construct answer > points matrix.\n\tconst answerPointsMatrix = constructAnswerPointsMatrix(\n\t\tanswers,\n\t\tuserSubmission\n\t);\n\n\t// Return the score, hash, user submission, results and quiz data.\n\tconst response = {\n\t\thash: userSubmissionHash,\n\t\tscore: SCORE,\n\t\tuserSubmission,\n\t\tresultsData: {\n\t\t\tcorrectAnswersGiven: userSubmission.filter(\n\t\t\t\t(answerUuid) => answers[answerUuid].correct\n\t\t\t),\n\t\t\tincorrectAnswersGiven: userSubmission.filter(\n\t\t\t\t(answerUuid) => !answers[answerUuid].correct\n\t\t\t),\n\t\t\tquestionPointsMatrix,\n\t\t\tanswerPointsMatrix,\n\t\t},\n\t\tquizData: {\n\t\t\tcorrectAnswers: getCorrectAnswers(answers),\n\t\t\tincorrectAnswers: getIncorrectAnswers(answers),\n\t\t},\n\t};\n\n\treturn response;\n}\n","/**\n * WordPress Dependencies\n */\nimport {\n\tstore,\n\tgetElement,\n\tgetContext,\n\tgetServerContext,\n\tgetServerState,\n\twithScope,\n\twithSyncEvent,\n} from '@wordpress/interactivity';\n\n/**\n * Internal Dependencies\n */\nimport scoreQuiz from './scoring';\n\n/**\n * Hoisted Dependencies\n */\nconst { wp, location, localStorage } = window;\nconst { url, apiFetch } = wp;\nconst { addQueryArgs, getQueryArg, getPathAndQueryString } = url;\n\nconst { state, actions } = store('prc-quiz/controller', {\n\tstate: {\n\t\tcurrentSessionArchetypes: [],\n\t\tget quizId() {\n\t\t\tconst { quizId } = getContext();\n\t\t\treturn quizId;\n\t\t},\n\t\tget nonce() {\n\t\t\tconst { nonce } = getContext();\n\t\t\treturn nonce;\n\t\t},\n\t\tget quizData() {\n\t\t\tconst { quizId } = getContext();\n\t\t\treturn state[`quiz_${quizId}`];\n\t\t},\n\t\tget questions() {\n\t\t\tconst { quizId } = getContext();\n\t\t\treturn state[`quiz_${quizId}`].questions;\n\t\t},\n\t\tget answers() {\n\t\t\tconst { quizId } = getContext();\n\t\t\tconst quizData = state[`quiz_${quizId}`];\n\t\t\treturn Object.values(quizData.questions).reduce((acc, question) => {\n\t\t\t\treturn {\n\t\t\t\t\t...acc,\n\t\t\t\t\t...question.answers,\n\t\t\t\t};\n\t\t\t}, {});\n\t\t},\n\t\t/**\n\t\t * For prc-block/question and prc-block/answer blocks.\n\t\t * This determines if the block has a conditionalDisplay flag and if the given answer is selected.\n\t\t * If the answer is selected, the block will be displayed.\n\t\t * If the answer is not selected, the block will be hidden.\n\t\t */\n\t\tget isConditionalAnswerSelected() {\n\t\t\tconst context = getContext();\n\t\t\tconst {\n\t\t\t\tconditionalDisplay,\n\t\t\t\tconditionalAnswerUuid,\n\t\t\t\tselectedAnswers,\n\t\t\t\tuuid,\n\t\t\t\tquizId,\n\t\t\t} = context;\n\t\t\tif (!conditionalDisplay || !conditionalAnswerUuid) return false;\n\t\t\t// Check if the conditionalAnswerUuid is actually a question uuid, if so\n\t\t\t// then lets just check to see if the question has any selected answers.\n\t\t\tif (state[`quiz_${quizId}`].questions[conditionalAnswerUuid]) {\n\t\t\t\tconst questionUuids = Object.keys(\n\t\t\t\t\tstate[`quiz_${quizId}`].questions\n\t\t\t\t);\n\t\t\t\treturn (\n\t\t\t\t\tquestionUuids.includes(conditionalAnswerUuid) &&\n\t\t\t\t\tselectedAnswers[conditionalAnswerUuid].length > 0\n\t\t\t\t);\n\t\t\t}\n\t\t\t// construct a flat array of selected answers\n\t\t\tconst selectedAnswersArray = Object.values(selectedAnswers).flat();\n\t\t\treturn (\n\t\t\t\tselectedAnswersArray.includes(conditionalAnswerUuid) ||\n\t\t\t\tselectedAnswersArray.includes(uuid)\n\t\t\t);\n\t\t},\n\t\tget displayResults() {\n\t\t\tconst { displayResults } = getContext();\n\t\t\treturn displayResults;\n\t\t},\n\t\tget displayPages() {\n\t\t\tconst { displayType } = getContext();\n\t\t\treturn 'scrollable' === displayType\n\t\t\t\t? true\n\t\t\t\t: !state.displayResults && !state.displayGroupResults;\n\t\t},\n\t\tget displayGroupResults() {\n\t\t\tconst { displayGroupResults } = getContext();\n\t\t\treturn displayGroupResults;\n\t\t},\n\t\t/**\n\t\t * Check if user has given consent for functional cookies\n\t\t */\n\t\tget hasConsentForCookies() {\n\t\t\t// Check if WP Consent API is available and user has given consent\n\t\t\tif (typeof window.wp_has_consent === 'function') {\n\t\t\t\treturn window.wp_has_consent('functional');\n\t\t\t}\n\t\t\t// If consent API is not available, assume consent (for backwards compatibility)\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * Get quiz progress data (returns JSON object if available)\n\t\t */\n\t\tget quizProgress() {\n\t\t\tconst data = state.cookie;\n\t\t\t// Check if it's a valid quiz progress object\n\t\t\tif (data && typeof data === 'object' && data.quiz_id) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\n\t\t/**\n\t\t * Check if current quiz has saved progress\n\t\t */\n\t\tget hasQuizProgress() {\n\t\t\tconst { quizId } = getContext();\n\t\t\tconst data = state.quizProgress;\n\t\t\treturn data && data.quiz_id === quizId;\n\t\t},\n\n\t\tget cookie() {\n\t\t\tconst name = `prc-quiz-builder`;\n\n\t\t\t// Only try to read cookie if user has consented or consent API is not available\n\t\t\tif (!state.hasConsentForCookies) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst nameEQ = name + '=';\n\t\t\tconst ca = document.cookie.split(';');\n\t\t\tfor (let i = 0; i < ca.length; i++) {\n\t\t\t\tlet c = ca[i];\n\t\t\t\twhile (c.charAt(0) === ' ') c = c.substring(1, c.length);\n\t\t\t\tif (c.indexOf(nameEQ) === 0) {\n\t\t\t\t\tconst cookieValue = c.substring(nameEQ.length, c.length);\n\t\t\t\t\tconst decodedValue = decodeURIComponent(cookieValue);\n\n\t\t\t\t\t// Try to parse as JSON first\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn JSON.parse(decodedValue);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// If JSON parsing fails, return as string\n\t\t\t\t\t\treturn decodedValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t},\n\tactions: {\n\t\tscoreQuiz: () => {\n\t\t\tconst { userSubmission } = getContext();\n\t\t\tconst { answers, questions } = state;\n\t\t\treturn scoreQuiz(userSubmission, answers, questions);\n\t\t},\n\t\t/**\n\t\t * Checks the element for any available animations and dispatches them with the animations store.\n\t\t */\n\t\trunAnimation: () => {\n\t\t\tconst { ref } = getElement();\n\t\t\tconst animationStore = store('prc-block/animation');\n\t\t\tconst animationElements = ref.querySelectorAll(\n\t\t\t\t'.wp-block-prc-block-animation'\n\t\t\t);\n\t\t\tif (animationElements.length) {\n\t\t\t\tanimationElements.forEach((element) => {\n\t\t\t\t\tconst animationId = element.getAttribute('id');\n\t\t\t\t\tconst { parentElement } = element;\n\t\t\t\t\tconst isHidden =\n\t\t\t\t\t\tnull !== parentElement?.getAttribute('hidden');\n\t\t\t\t\tif (animationId && !isHidden) {\n\t\t\t\t\t\tanimationStore.state[animationId].enabled = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonStartQuizClick: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { uuid, currentPageUuid, pages } = context;\n\t\t\t// Set the current page uuid to the next page uuid.\n\t\t\tcontext.currentPageUuid = pages[1];\n\t\t\tactions.saveQuizProgress();\n\t\t}),\n\t\tonNextPageClick: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { uuid, currentPageUuid, pages } = context;\n\t\t\t// Find the index of the current page in the pages array.\n\t\t\tconst currentPageIndex = pages.indexOf(currentPageUuid);\n\t\t\t// Set the current page uuid to the next page uuid.\n\t\t\tcontext.currentPageUuid = pages[currentPageIndex + 1];\n\t\t\tactions.saveQuizProgress();\n\t\t}),\n\t\tonPreviousPageClick: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { uuid, currentPageUuid, pages } = context;\n\t\t\t// Find the index of the current page in the pages array.\n\t\t\tconst currentPageIndex = pages.indexOf(currentPageUuid);\n\t\t\t// Set the current page uuid to the previous page uuid.\n\t\t\tcontext.currentPageUuid = pages[currentPageIndex - 1];\n\t\t\tactions.saveQuizProgress();\n\t\t}),\n\t\tonSubmitQuizClick: withSyncEvent((event) => {\n\t\t\tactions.submitQuiz();\n\t\t}),\n\t\tonResetQuizClick: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { quizUrl, displayResults } = context;\n\t\t\t// If the user is on the results page, we should just go back to the quiz url.\n\t\t\tif (displayResults) {\n\t\t\t\twindow.location.href = quizUrl;\n\t\t\t} else {\n\t\t\t\tactions.resetQuiz();\n\t\t\t}\n\t\t\tactions.saveQuizProgress();\n\t\t}),\n\t\t/**\n\t\t * A softer reset, this sends the user back to the first page.\n\t\t */\n\t\tgoBackToFirstPage: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.processing = false;\n\t\t\tcontext.submitted = false;\n\t\t\tcontext.currentPageUuid = context.firstPageUuid;\n\t\t},\n\t\t/**\n\t\t * Reset's the quiz state back to the initial state.\n\t\t */\n\t\tresetQuiz: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.submitted = false;\n\t\t\tcontext.processing = false;\n\t\t\tcontext.displayResults = false;\n\t\t\tcontext.selectedAnswers = {};\n\t\t\tcontext.userSubmission = {};\n\t\t\tcontext.userScore = {};\n\t\t\tcontext.currentPageUuid = context.firstPageUuid;\n\t\t},\n\n\t\tclearCookie: () => {\n\t\t\tconst name = `prc-quiz-builder`;\n\t\t\tdocument.cookie =\n\t\t\t\tname + '=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n\t\t},\n\n\t\tsetCookie: (value) => {\n\t\t\tconst { quizId } = getContext();\n\t\t\tconst name = `prc-quiz-builder`;\n\n\t\t\t// Check consent before setting cookie\n\t\t\tif (!state.hasConsentForCookies) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Convert value to string for storage\n\t\t\tlet cookieValue;\n\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t// If it's an object, JSON stringify it\n\t\t\t\tcookieValue = encodeURIComponent(JSON.stringify(value));\n\t\t\t} else {\n\t\t\t\t// If it's a primitive, convert to string\n\t\t\t\tcookieValue = encodeURIComponent(String(value));\n\t\t\t}\n\n\t\t\t// Set cookie with consent\n\t\t\tconst d = new Date();\n\t\t\td.setTime(d.getTime() + 30 * 24 * 60 * 60 * 1000);\n\t\t\tconst expires = 'expires=' + d.toUTCString();\n\t\t\tdocument.cookie =\n\t\t\t\tname + '=' + cookieValue + ';' + expires + ';path=/';\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Save quiz progress data as JSON object\n\t\t */\n\t\tsaveQuizProgress: (score = null) => {\n\t\t\tconst { selectedAnswers, currentPageUuid, quizId } = getContext();\n\t\t\tconst quizData = {\n\t\t\t\tquiz_id: quizId,\n\t\t\t\tselectedAnswers: selectedAnswers,\n\t\t\t\tcurrentPageUuid: currentPageUuid,\n\t\t\t\ttimestamp: Date.now(),\n\t\t\t};\n\t\t\tif (score) {\n\t\t\t\tquizData.score = score;\n\t\t\t}\n\t\t\treturn actions.setCookie(quizData);\n\t\t},\n\t\t/**\n\t\t * Navigate the user to the results view and submit the user's results to the database.\n\t\t */\n\t\t*submitQuiz() {\n\t\t\tconst context = getContext();\n\t\t\tconst {\n\t\t\t\tanswerThreshold,\n\t\t\t\tdisplayType,\n\t\t\t\tuserScore,\n\t\t\t\tquizId,\n\t\t\t\tnonce,\n\t\t\t\tgroupsEnabled,\n\t\t\t\tgroupId,\n\t\t\t\tquizUrl,\n\t\t\t\treadyForSubmission,\n\t\t\t\tallowSubmissions,\n\t\t\t\tisPreview,\n\t\t\t} = context;\n\t\t\tconst { hash, userSubmission, score } = userScore;\n\t\t\tlet newScore = null;\n\t\t\tlet requestBody = {\n\t\t\t\thash,\n\t\t\t\tuserSubmission,\n\t\t\t\tscore,\n\t\t\t};\n\n\t\t\tcontext.processing = true;\n\n\t\t\t// If the user has not answered enough questions we prompt them to reset the quiz, or in the case\n\t\t\t// of paginated quizzes, go back to the first page.\n\t\t\tif (!readyForSubmission) {\n\t\t\t\tconst shouldReset = confirm(\n\t\t\t\t\t`You must answer ${answerThreshold} questions to submit the quiz.\\n\\nWould you like to reset the quiz and start over?`\n\t\t\t\t);\n\n\t\t\t\tif (shouldReset) {\n\t\t\t\t\tactions.resetQuiz();\n\t\t\t\t} else if ('scrollable' !== displayType) {\n\t\t\t\t\tconst shouldGoToFirstPage = confirm(\n\t\t\t\t\t\t`Would you like to go back to the first page to answer more questions?`\n\t\t\t\t\t);\n\t\t\t\t\tif (shouldGoToFirstPage) {\n\t\t\t\t\t\tactions.goBackToFirstPage();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn; // Stop execution here.\n\t\t\t}\n\n\t\t\tconst requestArgs = {\n\t\t\t\tquizId,\n\t\t\t\tnonce,\n\t\t\t};\n\t\t\tif (groupsEnabled && groupId) {\n\t\t\t\trequestArgs.groupId = groupId;\n\t\t\t}\n\n\t\t\t// Any block, but specifically those inside results, can inject a new\n\t\t\t// function into the quiz controller state called parseSubmissionRequest.\n\t\t\t// This allows other quizzes, like Political Typology, to utilize their own\n\t\t\t// scoring logic.\n\t\t\tif (actions.parseSubmissionRequest) {\n\t\t\t\trequestBody = yield actions.parseSubmissionRequest(requestBody);\n\t\t\t\tif (score !== requestBody.score) {\n\t\t\t\t\tnewScore = requestBody.score;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetTimeout(\n\t\t\t\twithScope(function* () {\n\t\t\t\t\tconst router = yield import(\n\t\t\t\t\t\t'@wordpress/interactivity-router'\n\t\t\t\t\t);\n\t\t\t\t\tcontext.displayResults = true;\n\t\t\t\t\tif (isPreview) {\n\t\t\t\t\t\tcontext.readyForSubmission = false;\n\t\t\t\t\t\tcontext.processing = false;\n\t\t\t\t\t\tif (newScore) {\n\t\t\t\t\t\t\tcontext.userScore = {\n\t\t\t\t\t\t\t\t...context.userScore,\n\t\t\t\t\t\t\t\tscore: newScore,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Clear the cookie before navigating to the results page.\n\t\t\t\t\tactions.clearCookie();\n\n\t\t\t\t\trouter.actions.navigate(`${quizUrl}results/${hash}`);\n\t\t\t\t\t// Stop execution if this user has already submitted a quiz with the same archetype\n\t\t\t\t\t// OR if the quiz does not allow submissions.\n\t\t\t\t\tif (\n\t\t\t\t\t\tstate.currentSessionArchetypes.includes(hash) ||\n\t\t\t\t\t\t!allowSubmissions\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontext.readyForSubmission = false;\n\t\t\t\t\t\tcontext.processing = false;\n\t\t\t\t\t\tif (newScore) {\n\t\t\t\t\t\t\tcontext.userScore = {\n\t\t\t\t\t\t\t\t...context.userScore,\n\t\t\t\t\t\t\t\tscore: newScore,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tstate.currentSessionArchetypes.push(hash);\n\n\t\t\t\t\t// Store the submission in the database, pass the requestArgs and requestBody to the\n\t\t\t\t\t// quiz builder REST API.\n\t\t\t\t\tapiFetch({\n\t\t\t\t\t\tpath: addQueryArgs(\n\t\t\t\t\t\t\t'/prc-api/v3/quiz/submit',\n\t\t\t\t\t\t\trequestArgs\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tdata: requestBody,\n\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tconsole.log('submitQuiz response ->', response);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tconsole.error('submitQuiz error ->', error);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\tif (newScore) {\n\t\t\t\t\t\t\t\tcontext.userScore = {\n\t\t\t\t\t\t\t\t\t...context.userScore,\n\t\t\t\t\t\t\t\t\tscore: newScore,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext.processing = false;\n\t\t\t\t\t\t\tcontext.readyForSubmission = false;\n\t\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t\t1000\n\t\t\t);\n\t\t},\n\t},\n\tcallbacks: {\n\t\tonInit: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.processing = true;\n\t\t\t// Check if the user has a cookie for this quiz, and if so check if currentPageUuid is set, if so, set context to it.\n\t\t\tsetTimeout(\n\t\t\t\twithScope(() => {\n\t\t\t\t\tcontext.processing = false;\n\t\t\t\t\tcontext.loaded = true;\n\t\t\t\t}),\n\t\t\t\t1500\n\t\t\t);\n\t\t},\n\t\t/**\n\t\t * This runs only once, when a user has successfully crossed the answer threshold and any other readyForSubmission conditions are met.\n\t\t */\n\t\tonScrollableSubmit: withSyncEvent(() => {\n\t\t\tconst context = getContext();\n\t\t\tconst { submitted, readyForSubmission, displayType, processing } =\n\t\t\t\tcontext;\n\n\t\t\tif (\n\t\t\t\t'scrollable' !== displayType ||\n\t\t\t\t!readyForSubmission ||\n\t\t\t\tprocessing\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetTimeout(\n\t\t\t\twithScope(() => {\n\t\t\t\t\tactions.submitQuiz();\n\t\t\t\t}),\n\t\t\t\t1200\n\t\t\t);\n\t\t}),\n\t\t/**\n\t\t * Constructs a flat array of the user's selected answers for submission.\n\t\t */\n\t\tupdateUserSubmission: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { selectedAnswers, answerThreshold } = context;\n\n\t\t\t// selectedAnswers structure: { questionUuid: [answerUuid1, answerUuid2, ...], ... }\n\t\t\t// API expects: { answers: [answerUuid1, answerUuid2, answerUuid3, ...] }\n\t\t\t// Flatten all selected answers from all questions into a single array\n\t\t\tconst answersArray = Object.values(selectedAnswers || {}).flat();\n\n\t\t\tcontext.userSubmission = answersArray;\n\n\t\t\t// If the user has exceeded or met the answerThreshold we want to signal readyForSubmission.\n\t\t\tif (answersArray.length >= answerThreshold) {\n\t\t\t\tcontext.readyForSubmission = true;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * As the user updates their answers, we calculate a new score.\n\t\t */\n\t\tupdateUserScore: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { userSubmission, quizId, displayResults } = context;\n\t\t\t// If displayResults is set to true we don't need to keep calculating the score.\n\t\t\tif (displayResults) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!userSubmission) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!quizId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// If the user has not answered any questions, don't calculate a score yet, why bother.\n\t\t\tif (0 === userSubmission.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst before = context.userScore;\n\n\t\t\tconst after = actions.scoreQuiz();\n\n\t\t\tcontext.userScore = after;\n\t\t},\n\t},\n});\n"],"names":["crypt","utf8","isBuffer","bin","md5","message","options","constructor","String","encoding","stringToBytes","Array","prototype","slice","call","isArray","Uint8Array","toString","m","bytesToWords","l","length","a","b","c","d","i","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","endian","x","s","t","n","_blocksize","_digestsize","module","exports","Error","digestbytes","wordsToBytes","asBytes","asString","bytesToString","bytesToHex","base64map","rotl","rotr","Number","randomBytes","bytes","push","Math","floor","random","words","hex","join","hexToBytes","parseInt","substr","bytesToBase64","base64","triplet","j","charAt","base64ToBytes","replace","imod4","indexOf","pow","import","obj","readFloatLE","isSlowBuffer","_isBuffer","charenc","str","unescape","encodeURIComponent","decodeURIComponent","escape","charCodeAt","fromCharCode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","key","o","Object","defineProperty","enumerable","get","prop","hasOwnProperty","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","getCorrectAnswers","answers","values","filter","answer","correct","getIncorrectAnswers","wp","location","localStorage","window","url","apiFetch","addQueryArgs","getQueryArg","getPathAndQueryString","state","actions","store","currentSessionArchetypes","quizId","getContext","nonce","quizData","questions","reduce","acc","question","isConditionalAnswerSelected","context","conditionalDisplay","conditionalAnswerUuid","selectedAnswers","uuid","keys","includes","selectedAnswersArray","flat","displayResults","displayPages","displayType","displayGroupResults","hasConsentForCookies","wp_has_consent","quizProgress","data","cookie","quiz_id","hasQuizProgress","ca","document","split","substring","name","cookieValue","nameEQ","decodedValue","JSON","parse","e","scoreQuiz","userSubmission","userSubmissionHash","SCORE","answerUuid","points","tallyUserPoints","questionPointsMatrix","questionPoints","forEach","questionUuid","id","internalId","userMatchingAnswer","find","pointsAwardedForGivenAnswer","constructQuestionPointsMatrix","answerPointsMatrix","answerPoints","constructAnswerPointsMatrix","hash","score","resultsData","correctAnswersGiven","incorrectAnswersGiven","correctAnswers","incorrectAnswers","runAnimation","ref","getElement","animationStore","animationElements","querySelectorAll","element","animationId","getAttribute","parentElement","isHidden","enabled","onStartQuizClick","withSyncEvent","event","currentPageUuid","pages","saveQuizProgress","onNextPageClick","currentPageIndex","onPreviousPageClick","onSubmitQuizClick","submitQuiz","onResetQuizClick","quizUrl","href","resetQuiz","goBackToFirstPage","processing","submitted","firstPageUuid","userScore","clearCookie","setCookie","value","stringify","Date","setTime","getTime","expires","toUTCString","timestamp","now","answerThreshold","groupsEnabled","groupId","readyForSubmission","allowSubmissions","isPreview","newScore","requestBody","confirm","requestArgs","parseSubmissionRequest","setTimeout","withScope","router","navigate","path","method","then","response","console","log","catch","error","finally","callbacks","onInit","loaded","onScrollableSubmit","updateUserSubmission","answersArray","updateUserScore","after"],"sourceRoot":""}
import{getContext as r,store as e}from"@wordpress/interactivity";const{apiFetch:s,url:{addQueryArgs:t}}=window.wp,{state:o,actions:u}=e("prc-quiz/controller",{state:{get communityGroupResultsUrl(){const e=r(),{groupId:s,quizUrl:t}=e;return!!s&&`${t}/group/${s}/results`},get groupAnswers(){const e=r(),{groupsEnabled:s,quizId:t}=e;if(!s)return;const u=o[`quiz_${t}`];if(!u)return;const{questions:n}=u;let a=Object.values(n).map(r=>Object.values(r.answers).map(r=>r.uuid));return a=a.flat(),a.reduce((r,e)=>(r[e]=0,r),{})},get groupClusters(){const e=r(),{groupsEnabled:s,quizId:t}=e;if(!s)return;const u=o[`quiz_${t}`];if(!u)return;const{clusters:n}=u;return n}},actions:{createGroup:async r=>{const{nonce:u,quizId:n}=o,{groupAnswers:a,groupClusters:c}=o;console.log("createGroup Request::",{formFields:r,nonce:u,quizId:n,groupAnswers:a,groupClusters:c});const i=await e("prc-user-accounts/content-gate").actions.getUserIdFromCookie();if(console.log("createGroup Owner ID",i),!Object.keys(a).length||!Object.keys(c).length)throw new Error("Answers and clusters are required to create a group.");if(!i)throw new Error("Owner ID is required to create a group.");if(!n)throw new Error("Quiz ID is required to create a group.");try{return await async function(r,e,o,u,n,a){return new Promise((c,i)=>{console.log("createGroupFormAction",{quizId:r,ownerId:e,formFields:o,answers:u,clusters:n,nonce:a});const g=o.find(r=>"groupName"===r.name)?.value;return a?g?e?Object.keys(u).length&&Object.keys(n).length?(console.log("createGroupFormAction do api fetch"),void s({path:t("prc-api/v3/quiz/create-group",{nonce:a,quizId:r}),method:"POST",data:{groupName:g,ownerId:e,answers:u,clusters:n}}).then(r=>(console.log("Group created successfully",r),c({message:`Group created successfully. You can now share this url: ${r.group_url} with your group members. For group: ${r.group_id}`,data:r,status:"success"}))).catch(r=>{let e="Error creating group. Please try again.";return"rest_invalid_param"===r.code&&(e="Invalid group name. Please check your group name and try again."),i({message:e,data:r,status:"error"})})):i({message:"Answers and clusters are required to create a group.",status:"error"}):i({message:"Owner ID is required",status:"error"}):i({message:"Group name is required",status:"error"}):i({message:"Nonce is required",status:"error"})})}(n,i,r,a,c,u)}catch(r){throw r}}},callbacks:{onGroupsInit:()=>{const e=r(),{groupsEnabled:s,groupData:t,groupDomain:u,groupId:n,quizId:a}=e;s&&o[`quiz_${a}`]}}});
//# sourceMappingURL=view.js.map